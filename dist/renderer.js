/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ var __webpack_modules__ = ({

/***/ "./src/renderer/ui/addons/card.scss":
/*!******************************************!*\
  !*** ./src/renderer/ui/addons/card.scss ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// extracted by mini-css-extract-plugin\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"container\":\"holy-card-container\",\"header\":\"holy-card-header\",\"description\":\"holy-card-description\",\"controls\":\"holy-card-controls\",\"toolbutton-inner\":\"holy-card-toolbutton-inner\",\"field\":\"holy-card-field\"});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvdWkvYWRkb25zL2NhcmQuc2Nzcy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxpRUFBZSxDQUFDLDhNQUE4TSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbHltb2QvLi9zcmMvcmVuZGVyZXIvdWkvYWRkb25zL2NhcmQuc2Nzcz9iZjQ1Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IGRlZmF1bHQge1wiY29udGFpbmVyXCI6XCJob2x5LWNhcmQtY29udGFpbmVyXCIsXCJoZWFkZXJcIjpcImhvbHktY2FyZC1oZWFkZXJcIixcImRlc2NyaXB0aW9uXCI6XCJob2x5LWNhcmQtZGVzY3JpcHRpb25cIixcImNvbnRyb2xzXCI6XCJob2x5LWNhcmQtY29udHJvbHNcIixcInRvb2xidXR0b24taW5uZXJcIjpcImhvbHktY2FyZC10b29sYnV0dG9uLWlubmVyXCIsXCJmaWVsZFwiOlwiaG9seS1jYXJkLWZpZWxkXCJ9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/renderer/ui/addons/card.scss\n");

/***/ }),

/***/ "./src/renderer/ui/addons/panel.scss":
/*!*******************************************!*\
  !*** ./src/renderer/ui/addons/panel.scss ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// extracted by mini-css-extract-plugin\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvdWkvYWRkb25zL3BhbmVsLnNjc3MuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0EsaUVBQWUsRUFBRSIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbHltb2QvLi9zcmMvcmVuZGVyZXIvdWkvYWRkb25zL3BhbmVsLnNjc3M/MDAwMiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCBkZWZhdWx0IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/renderer/ui/addons/panel.scss\n");

/***/ }),

/***/ "./src/renderer/ui/components/settings.scss":
/*!**************************************************!*\
  !*** ./src/renderer/ui/components/settings.scss ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// extracted by mini-css-extract-plugin\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\"panel\":\"holy-settings-panel\",\"title\":\"holy-settings-title\",\"addons-controls\":\"holy-settings-addons-controls\",\"overflow-menu\":\"holy-settings-overflow-menu\",\"open-folder\":\"holy-settings-open-folder\",\"addons-search\":\"holy-settings-addons-search\",\"card-scroller\":\"holy-settings-card-scroller\",\"title-caret\":\"holy-settings-title-caret\",\"title-name\":\"holy-settings-title-name\",\"title-sub\":\"holy-settings-title-sub\",\"overflow-header\":\"holy-settings-overflow-header\"});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvdWkvY29tcG9uZW50cy9zZXR0aW5ncy5zY3NzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQTtBQUNBLGlFQUFlLENBQUMsNGNBQTRjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9seW1vZC8uL3NyYy9yZW5kZXJlci91aS9jb21wb25lbnRzL3NldHRpbmdzLnNjc3M/NTFjYSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBleHRyYWN0ZWQgYnkgbWluaS1jc3MtZXh0cmFjdC1wbHVnaW5cbmV4cG9ydCBkZWZhdWx0IHtcInBhbmVsXCI6XCJob2x5LXNldHRpbmdzLXBhbmVsXCIsXCJ0aXRsZVwiOlwiaG9seS1zZXR0aW5ncy10aXRsZVwiLFwiYWRkb25zLWNvbnRyb2xzXCI6XCJob2x5LXNldHRpbmdzLWFkZG9ucy1jb250cm9sc1wiLFwib3ZlcmZsb3ctbWVudVwiOlwiaG9seS1zZXR0aW5ncy1vdmVyZmxvdy1tZW51XCIsXCJvcGVuLWZvbGRlclwiOlwiaG9seS1zZXR0aW5ncy1vcGVuLWZvbGRlclwiLFwiYWRkb25zLXNlYXJjaFwiOlwiaG9seS1zZXR0aW5ncy1hZGRvbnMtc2VhcmNoXCIsXCJjYXJkLXNjcm9sbGVyXCI6XCJob2x5LXNldHRpbmdzLWNhcmQtc2Nyb2xsZXJcIixcInRpdGxlLWNhcmV0XCI6XCJob2x5LXNldHRpbmdzLXRpdGxlLWNhcmV0XCIsXCJ0aXRsZS1uYW1lXCI6XCJob2x5LXNldHRpbmdzLXRpdGxlLW5hbWVcIixcInRpdGxlLXN1YlwiOlwiaG9seS1zZXR0aW5ncy10aXRsZS1zdWJcIixcIm92ZXJmbG93LWhlYWRlclwiOlwiaG9seS1zZXR0aW5ncy1vdmVyZmxvdy1oZWFkZXJcIn07Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/renderer/ui/components/settings.scss\n");

/***/ }),

/***/ "./src/common/logger.ts":
/*!******************************!*\
  !*** ./src/common/logger.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"LoggerModule\": () => (/* binding */ LoggerModule),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nfunction _classPrivateMethodGet(receiver, privateSet, fn) {\n    if (!privateSet.has(receiver)) {\n        throw new TypeError(\"attempted to get private field on non-instance\");\n    }\n    return fn;\n}\nvar _parseType = new WeakSet(), _log = new WeakSet();\nclass LoggerModule {\n    log(...message) {\n        _classPrivateMethodGet(this, _log, log).call(this, \"log\", ...message);\n    }\n    info(...message) {\n        _classPrivateMethodGet(this, _log, log).call(this, \"info\", ...message);\n    }\n    warn(...message) {\n        _classPrivateMethodGet(this, _log, log).call(this, \"warn\", ...message);\n    }\n    error(...message) {\n        _classPrivateMethodGet(this, _log, log).call(this, \"error\", ...message);\n    }\n    debug(...message) {\n        _classPrivateMethodGet(this, _log, log).call(this, \"debug\", ...message);\n    }\n    static create(name) {\n        return new LoggerModule(name);\n    }\n    constructor(name){\n        _parseType.add(this);\n        _log.add(this);\n        this.module = name;\n    }\n}\nfunction parseType(type) {\n    switch(type){\n        case \"info\":\n        case \"warn\":\n        case \"error\":\n        case \"debug\":\n            return type;\n        default:\n            return \"log\";\n    }\n}\nfunction log(type, ...message) {\n    console[_classPrivateMethodGet(this, _parseType, parseType).call(this, type)](`%c[HolyMod]%c %c[${this.module}]%c`, \"color: #fff133; font-weight: 700;\", \"\", \"color: #fff133;\", \"\", ...message);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (LoggerModule);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tbW9uL2xvZ2dlci50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztJQVNJLFVBQVUsa0JBWVYsSUFBSTtBQW5CRCxNQUFNQSxZQUFZO0lBdUJyQkMsR0FBRyxJQUFJQyxPQUFPLEVBQVMsQ0FBQzsrQkFBQSxJQUFJLEVBQUVELElBQUcsRUFBSEEsR0FBRyxhQUFDLENBQUssU0FBS0MsT0FBTztJQUFFLENBQUM7SUFDdERDLElBQUksSUFBSUQsT0FBTyxFQUFTLENBQUM7K0JBQUEsSUFBSSxFQUFFRCxJQUFHLEVBQUhBLEdBQUcsYUFBQyxDQUFNLFVBQUtDLE9BQU87SUFBRSxDQUFDO0lBQ3hERSxJQUFJLElBQUlGLE9BQU8sRUFBUyxDQUFDOytCQUFBLElBQUksRUFBRUQsSUFBRyxFQUFIQSxHQUFHLGFBQUMsQ0FBTSxVQUFLQyxPQUFPO0lBQUUsQ0FBQztJQUN4REcsS0FBSyxJQUFJSCxPQUFPLEVBQVMsQ0FBQzsrQkFBQSxJQUFJLEVBQUVELElBQUcsRUFBSEEsR0FBRyxhQUFDLENBQU8sV0FBS0MsT0FBTztJQUFFLENBQUM7SUFDMURJLEtBQUssSUFBSUosT0FBTyxFQUFTLENBQUM7K0JBQUEsSUFBSSxFQUFFRCxJQUFHLEVBQUhBLEdBQUcsYUFBQyxDQUFPLFdBQUtDLE9BQU87SUFBRSxDQUFDO1dBRW5ESyxNQUFNLENBQUNDLElBQVksRUFBRSxDQUFDO1FBQ3pCLE1BQU0sQ0FBQyxHQUFHLENBQUNSLFlBQVksQ0FBQ1EsSUFBSTtJQUNoQyxDQUFDO2dCQTVCV0EsSUFBWSxDQUFFLENBQUM7UUFJM0IsVUFBVTtRQVlWLElBQUk7UUFmQSxJQUFJLENBQUNDLE1BQU0sR0FBR0QsSUFBSTtJQUN0QixDQUFDOztTQUVELFNBVUMsQ0FWVUUsSUFBYSxFQUFFLENBQUM7SUFDdkIsTUFBTSxDQUFFQSxJQUFJO1FBQ1IsSUFBSSxDQUFDLENBQU07UUFDWCxJQUFJLENBQUMsQ0FBTTtRQUNYLElBQUksQ0FBQyxDQUFPO1FBQ1osSUFBSSxDQUFDLENBQU87WUFDUixNQUFNLENBQUNBLElBQUk7O1lBRVgsTUFBTSxDQUFDLENBQUs7O0FBRXhCLENBQUM7U0FFRCxHQUVDLENBRklBLElBQWEsS0FBTVIsT0FBTyxFQUFTLENBQUM7SUFDckNTLE9BQU8sd0JBQUMsSUFBSSxFQUFFQyxVQUFTLEVBQVRBLFNBQVMsYUFBQ0YsSUFBSSxJQUFJLGlCQUFpQixFQUFFLElBQUksQ0FBQ0QsTUFBTSxDQUFDLEdBQUcsR0FBRyxDQUFtQyxvQ0FBRSxDQUFFLEdBQUUsQ0FBaUIsa0JBQUUsQ0FBRSxNQUFLUCxPQUFPO0FBQ25KLENBQUM7QUFhTCxpRUFBZUYsWUFBWSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9seW1vZC8uL3NyYy9jb21tb24vbG9nZ2VyLnRzPzhiYzIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHR5cGUgTG9nVHlwZSA9IGtleW9mIHR5cGVvZiBjb25zb2xlO1xyXG5cclxuZXhwb3J0IGNsYXNzIExvZ2dlck1vZHVsZSB7XHJcbiAgICBtb2R1bGU6IHN0cmluZztcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihuYW1lOiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLm1vZHVsZSA9IG5hbWU7XHJcbiAgICB9XHJcblxyXG4gICAgI3BhcnNlVHlwZSh0eXBlOiBMb2dUeXBlKSB7XHJcbiAgICAgICAgc3dpdGNoICh0eXBlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgXCJpbmZvXCI6XHJcbiAgICAgICAgICAgIGNhc2UgXCJ3YXJuXCI6XHJcbiAgICAgICAgICAgIGNhc2UgXCJlcnJvclwiOlxyXG4gICAgICAgICAgICBjYXNlIFwiZGVidWdcIjpcclxuICAgICAgICAgICAgICAgIHJldHVybiB0eXBlO1xyXG4gICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIFwibG9nXCI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICNsb2codHlwZTogTG9nVHlwZSwgIC4uLm1lc3NhZ2U6IGFueVtdKSB7XHJcbiAgICAgICAgY29uc29sZVt0aGlzLiNwYXJzZVR5cGUodHlwZSldKGAlY1tIb2x5TW9kXSVjICVjWyR7dGhpcy5tb2R1bGV9XSVjYCwgXCJjb2xvcjogI2ZmZjEzMzsgZm9udC13ZWlnaHQ6IDcwMDtcIiwgXCJcIiwgXCJjb2xvcjogI2ZmZjEzMztcIiwgXCJcIiwgLi4ubWVzc2FnZSk7XHJcbiAgICB9XHJcblxyXG4gICAgbG9nKC4uLm1lc3NhZ2U6IGFueVtdKSB7dGhpcy4jbG9nKFwibG9nXCIsIC4uLm1lc3NhZ2UpO31cclxuICAgIGluZm8oLi4ubWVzc2FnZTogYW55W10pIHt0aGlzLiNsb2coXCJpbmZvXCIsIC4uLm1lc3NhZ2UpO31cclxuICAgIHdhcm4oLi4ubWVzc2FnZTogYW55W10pIHt0aGlzLiNsb2coXCJ3YXJuXCIsIC4uLm1lc3NhZ2UpO31cclxuICAgIGVycm9yKC4uLm1lc3NhZ2U6IGFueVtdKSB7dGhpcy4jbG9nKFwiZXJyb3JcIiwgLi4ubWVzc2FnZSk7fVxyXG4gICAgZGVidWcoLi4ubWVzc2FnZTogYW55W10pIHt0aGlzLiNsb2coXCJkZWJ1Z1wiLCAuLi5tZXNzYWdlKTt9XHJcblxyXG4gICAgc3RhdGljIGNyZWF0ZShuYW1lOiBzdHJpbmcpIHtcclxuICAgICAgICByZXR1cm4gbmV3IExvZ2dlck1vZHVsZShuYW1lKTtcclxuICAgIH1cclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgTG9nZ2VyTW9kdWxlOyJdLCJuYW1lcyI6WyJMb2dnZXJNb2R1bGUiLCJsb2ciLCJtZXNzYWdlIiwiaW5mbyIsIndhcm4iLCJlcnJvciIsImRlYnVnIiwiY3JlYXRlIiwibmFtZSIsIm1vZHVsZSIsInR5cGUiLCJjb25zb2xlIiwicGFyc2VUeXBlIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/common/logger.ts\n");

/***/ }),

/***/ "./src/renderer/classes/store.ts":
/*!***************************************!*\
  !*** ./src/renderer/classes/store.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Store)\n/* harmony export */ });\n/* harmony import */ var _common_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @common/logger */ \"./src/common/logger.ts\");\n/* harmony import */ var _modules_discord__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @modules/discord */ \"./src/renderer/modules/discord.ts\");\n\n\nclass Store {\n    has(event) {\n        return event in this.events;\n    }\n    on(event, listener) {\n        if (!this.has(event)) this.events[event] = new Set();\n        this.events[event].add(listener);\n        return ()=>void this.off(event, listener)\n        ;\n    }\n    off(event, listener) {\n        if (!this.has(event)) return;\n        return this.events[event].delete(listener);\n    }\n    emit(event, ...args) {\n        if (!this.has(event)) return;\n        const toFire = [\n            ...this.events[event]\n        ];\n        for(let index = 0; index < toFire.length; index++){\n            const listener = toFire[index];\n            try {\n                listener(...args);\n            } catch (error) {\n                this.logger.error(`Store:${this.constructor.name}`, error);\n            }\n        }\n    }\n    useEvent(event, factory, validate = ()=>true\n    ) {\n        const [state, setState] = _modules_discord__WEBPACK_IMPORTED_MODULE_1__[\"default\"].React.useState(factory());\n        _modules_discord__WEBPACK_IMPORTED_MODULE_1__[\"default\"].React.useEffect(()=>{\n            return this.on(event, (...args)=>validate(...args) && setState(factory())\n            );\n        }, [\n            event,\n            factory\n        ]);\n        return state;\n    }\n    constructor(){\n        this.logger = new _common_logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"Store\");\n        this.events = {\n        };\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvY2xhc3Nlcy9zdG9yZS50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUM7QUFDSTtNQUl4QkUsS0FBSztJQUt0QkMsR0FBRyxDQUFDQyxLQUFhLEVBQVcsQ0FBQztRQUFBLE1BQU0sQ0FBQ0EsS0FBSyxJQUFJLElBQUksQ0FBQ0MsTUFBTTtJQUFDLENBQUM7SUFFMURDLEVBQUUsQ0FBQ0YsS0FBYSxFQUFFRyxRQUFrQixFQUFFLENBQUM7UUFDbkMsRUFBRSxHQUFHLElBQUksQ0FBQ0osR0FBRyxDQUFDQyxLQUFLLEdBQUcsSUFBSSxDQUFDQyxNQUFNLENBQUNELEtBQUssSUFBeUIsR0FBRyxDQUFDSSxHQUFHO1FBRXZFLElBQUksQ0FBQ0gsTUFBTSxDQUFDRCxLQUFLLEVBQXVCSyxHQUFHLENBQUNGLFFBQVE7UUFFcEQsTUFBTSxLQUFPLElBQUksQ0FBQyxJQUFJLENBQUNHLEdBQUcsQ0FBQ04sS0FBSyxFQUFFRyxRQUFROztJQUM5QyxDQUFDO0lBRURHLEdBQUcsQ0FBQ04sS0FBYSxFQUFFRyxRQUFrQixFQUFFLENBQUM7UUFDcEMsRUFBRSxHQUFHLElBQUksQ0FBQ0osR0FBRyxDQUFDQyxLQUFLLEdBQUcsTUFBTTtRQUU1QixNQUFNLENBQUMsSUFBSSxDQUFDQyxNQUFNLENBQUNELEtBQUssRUFBdUJPLE1BQU0sQ0FBQ0osUUFBUTtJQUNsRSxDQUFDO0lBRURLLElBQUksQ0FBQ1IsS0FBYSxLQUFLUyxJQUFJLEVBQVMsQ0FBQztRQUNqQyxFQUFFLEdBQUcsSUFBSSxDQUFDVixHQUFHLENBQUNDLEtBQUssR0FBRyxNQUFNO1FBQzVCLEtBQUssQ0FBQ1UsTUFBTSxHQUFHLENBQUM7ZUFBRyxJQUFJLENBQUNULE1BQU0sQ0FBQ0QsS0FBSztRQUFzQixDQUFDO1FBRTNELEdBQUcsQ0FBRSxHQUFHLENBQUNXLEtBQUssR0FBRyxDQUFDLEVBQUVBLEtBQUssR0FBR0QsTUFBTSxDQUFDRSxNQUFNLEVBQUVELEtBQUssR0FBSSxDQUFDO1lBQ2pELEtBQUssQ0FBQ1IsUUFBUSxHQUFHTyxNQUFNLENBQUNDLEtBQUs7WUFFN0IsR0FBRyxDQUFDLENBQUNSO2dCQUFBQSxRQUFRLElBQUlNLElBQUk7WUFBRSxDQUFDLENBQ3hCLEtBQUssRUFBRUksS0FBSyxFQUFFLENBQUM7Z0JBQUEsSUFBSSxDQUFDQyxNQUFNLENBQUNELEtBQUssRUFBRSxNQUFNLEVBQUUsSUFBSSxDQUFDRSxXQUFXLENBQUNDLElBQUksSUFBSUgsS0FBSztZQUFFLENBQUM7UUFDL0UsQ0FBQztJQUNMLENBQUM7SUFFREksUUFBUSxDQUFDakIsS0FBYSxFQUFFa0IsT0FBaUIsRUFBRUMsUUFBMEIsT0FBUyxJQUFJO01BQUUsQ0FBQztRQUNqRixLQUFLLEVBQUVDLEtBQUssRUFBRUMsUUFBUSxJQUFJeEIsdUVBQTZCLENBQUNxQixPQUFPO1FBQy9EckIsd0VBQThCLEtBQU8sQ0FBQztZQUNsQyxNQUFNLENBQUMsSUFBSSxDQUFDSyxFQUFFLENBQUNGLEtBQUssTUFBTVMsSUFBSSxHQUFLVSxRQUFRLElBQUlWLElBQUksS0FBS1ksUUFBUSxDQUFDSCxPQUFPOztRQUM1RSxDQUFDLEVBQUUsQ0FBQ2xCO1lBQUFBLEtBQUs7WUFBRWtCLE9BQU87UUFBQSxDQUFDO1FBRW5CLE1BQU0sQ0FBQ0UsS0FBSztJQUNoQixDQUFDOztRQXhDVSxJQXlDZCxDQXhDR04sTUFBTSxHQUFHLEdBQUcsQ0FBQ2xCLHNEQUFZLENBQUMsQ0FBTztRQUR0QixJQXlDZCxDQXRDR0ssTUFBTSxHQUFxQyxDQUFDO1FBQUEsQ0FBQzs7O0FBSHZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9seW1vZC8uL3NyYy9yZW5kZXJlci9jbGFzc2VzL3N0b3JlLnRzP2M5MWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IExvZ2dlck1vZHVsZSBmcm9tIFwiQGNvbW1vbi9sb2dnZXJcIjtcclxuaW1wb3J0IERpc2NvcmRNb2R1bGVzIGZyb20gXCJAbW9kdWxlcy9kaXNjb3JkXCI7XHJcblxyXG5leHBvcnQgdHlwZSBWYWxpZGF0ZUxpc3RlbmVyID0gKC4uLmFyZ3M6IGFueVtdKSA9PiBib29sZWFuO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3RvcmU8ZXZlbnRzID0gc3RyaW5nPiB7XHJcbiAgICBsb2dnZXIgPSBuZXcgTG9nZ2VyTW9kdWxlKFwiU3RvcmVcIik7XHJcblxyXG4gICAgZXZlbnRzOiB7W2V2ZW50OiBzdHJpbmddOiBTZXQ8RnVuY3Rpb24+fSA9IHt9O1xyXG5cclxuICAgIGhhcyhldmVudDogZXZlbnRzKTogYm9vbGVhbiB7cmV0dXJuIGV2ZW50IGluIHRoaXMuZXZlbnRzO31cclxuXHJcbiAgICBvbihldmVudDogZXZlbnRzLCBsaXN0ZW5lcjogRnVuY3Rpb24pIHtcclxuICAgICAgICBpZiAoIXRoaXMuaGFzKGV2ZW50KSkgdGhpcy5ldmVudHNbZXZlbnQgYXMgdW5rbm93biBhcyBzdHJpbmddID0gbmV3IFNldDxGdW5jdGlvbj4oKTtcclxuXHJcbiAgICAgICAgdGhpcy5ldmVudHNbZXZlbnQgYXMgdW5rbm93biBhcyBzdHJpbmddLmFkZChsaXN0ZW5lcik7XHJcblxyXG4gICAgICAgIHJldHVybiAoKSA9PiB2b2lkIHRoaXMub2ZmKGV2ZW50LCBsaXN0ZW5lcik7XHJcbiAgICB9XHJcblxyXG4gICAgb2ZmKGV2ZW50OiBldmVudHMsIGxpc3RlbmVyOiBGdW5jdGlvbikge1xyXG4gICAgICAgIGlmICghdGhpcy5oYXMoZXZlbnQpKSByZXR1cm47XHJcblxyXG4gICAgICAgIHJldHVybiB0aGlzLmV2ZW50c1tldmVudCBhcyB1bmtub3duIGFzIHN0cmluZ10uZGVsZXRlKGxpc3RlbmVyKTtcclxuICAgIH1cclxuXHJcbiAgICBlbWl0KGV2ZW50OiBldmVudHMsIC4uLmFyZ3M6IGFueVtdKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLmhhcyhldmVudCkpIHJldHVybjtcclxuICAgICAgICBjb25zdCB0b0ZpcmUgPSBbLi4udGhpcy5ldmVudHNbZXZlbnQgYXMgdW5rbm93biBhcyBzdHJpbmddXTtcclxuXHJcbiAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHRvRmlyZS5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgY29uc3QgbGlzdGVuZXIgPSB0b0ZpcmVbaW5kZXhdO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgdHJ5IHtsaXN0ZW5lciguLi5hcmdzKTt9XHJcbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge3RoaXMubG9nZ2VyLmVycm9yKGBTdG9yZToke3RoaXMuY29uc3RydWN0b3IubmFtZX1gLCBlcnJvcik7fVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB1c2VFdmVudChldmVudDogZXZlbnRzLCBmYWN0b3J5OiBGdW5jdGlvbiwgdmFsaWRhdGU6IFZhbGlkYXRlTGlzdGVuZXIgPSAoKSA9PiB0cnVlKSB7XHJcbiAgICAgICAgY29uc3QgW3N0YXRlLCBzZXRTdGF0ZV0gPSBEaXNjb3JkTW9kdWxlcy5SZWFjdC51c2VTdGF0ZShmYWN0b3J5KCkpO1xyXG4gICAgICAgIERpc2NvcmRNb2R1bGVzLlJlYWN0LnVzZUVmZmVjdCgoKSA9PiB7XHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm9uKGV2ZW50LCAoLi4uYXJncykgPT4gdmFsaWRhdGUoLi4uYXJncykgJiYgc2V0U3RhdGUoZmFjdG9yeSgpKSk7XHJcbiAgICAgICAgfSwgW2V2ZW50LCBmYWN0b3J5XSk7XHJcblxyXG4gICAgICAgIHJldHVybiBzdGF0ZTtcclxuICAgIH1cclxufSJdLCJuYW1lcyI6WyJMb2dnZXJNb2R1bGUiLCJEaXNjb3JkTW9kdWxlcyIsIlN0b3JlIiwiaGFzIiwiZXZlbnQiLCJldmVudHMiLCJvbiIsImxpc3RlbmVyIiwiU2V0IiwiYWRkIiwib2ZmIiwiZGVsZXRlIiwiZW1pdCIsImFyZ3MiLCJ0b0ZpcmUiLCJpbmRleCIsImxlbmd0aCIsImVycm9yIiwibG9nZ2VyIiwiY29uc3RydWN0b3IiLCJuYW1lIiwidXNlRXZlbnQiLCJmYWN0b3J5IiwidmFsaWRhdGUiLCJzdGF0ZSIsInNldFN0YXRlIiwiUmVhY3QiLCJ1c2VTdGF0ZSIsInVzZUVmZmVjdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/renderer/classes/store.ts\n");

/***/ }),

/***/ "./src/renderer/data/modules.ts":
/*!**************************************!*\
  !*** ./src/renderer/data/modules.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n    // React, Modules & Constants\n    Constants: {\n        props: [\n            \"API_HOST\",\n            \"ActionTypes\"\n        ]\n    },\n    React: {\n        props: [\n            \"createElement\",\n            \"isValidElement\"\n        ]\n    },\n    ReactDOM: {\n        props: [\n            \"render\",\n            \"createPortal\"\n        ]\n    },\n    ReactSpring: {\n        props: [\n            \"useSpring\",\n            \"Controller\",\n            \"animated\"\n        ]\n    },\n    Flux: {\n        type: \"MERGE\",\n        props: [\n            [\n                \"Store\",\n                \"Dispatcher\"\n            ],\n            [\n                \"connectStores\"\n            ]\n        ]\n    },\n    Dispatcher: {\n        props: [\n            \"dirtyDispatch\"\n        ]\n    },\n    ContextMenuActions: {\n        props: [\n            \"openContextMenu\"\n        ]\n    },\n    ModalsApi: {\n        props: [\n            \"openModal\",\n            \"useModalsStore\"\n        ]\n    },\n    ModalStack: {\n        props: [\n            \"push\",\n            \"popAll\"\n        ]\n    },\n    LocaleManager: {\n        props: [\n            \"Messages\",\n            \"getAvailableLocales\"\n        ],\n        ensure: (mod)=>mod.Messages.CLOSE\n    },\n    LocaleStore: {\n        props: [\n            \"locale\",\n            \"theme\"\n        ]\n    },\n    Lodash: {\n        props: [\n            \"zipObjectDeep\"\n        ]\n    },\n    MessageCreators: {\n        props: [\n            \"createBotMessage\"\n        ]\n    },\n    MessageActions: {\n        props: [\n            \"receiveMessage\"\n        ]\n    },\n    AvatarDefaults: {\n        props: [\n            \"BOT_AVATARS\"\n        ]\n    },\n    Moment: {\n        props: [\n            \"momentProperties\"\n        ]\n    },\n    // Stores\n    SelectedChannelStore: {\n        props: [\n            \"_dispatchToken\",\n            \"getChannelId\",\n            \"getLastSelectedChannelId\"\n        ]\n    },\n    // Components\n    ModalComponents: {\n        props: [\n            \"ModalRoot\",\n            \"ModalHeader\"\n        ]\n    },\n    Link: {\n        name: \"Anchor\"\n    },\n    Switch: {\n        name: \"Switch\"\n    },\n    SwitchItem: {\n        name: \"SwitchItem\"\n    },\n    TextInput: {\n        name: \"TextInput\"\n    },\n    SelectInput: {\n        name: \"SelectTempWrapper\"\n    },\n    Tooltips: {\n        props: [\n            \"TooltipContainer\"\n        ],\n        rename: [\n            {\n                from: \"default\",\n                to: \"Tooltip\"\n            },\n            {\n                from: \"TooltipContainer\",\n                to: \"Container\"\n            },\n            {\n                from: \"TooltipColors\",\n                to: \"Colors\"\n            },\n            {\n                from: \"TooltipPositions\",\n                to: \"Positions\"\n            },\n            {\n                from: \"TooltipLayer\",\n                to: \"Layer\"\n            }, \n        ]\n    },\n    Button: {\n        props: [\n            \"BorderColors\",\n            \"Colors\"\n        ]\n    },\n    Slider: {\n        name: \"Slider\"\n    },\n    ConfirmationModal: {\n        name: \"ConfirmModal\"\n    },\n    Text: {\n        name: \"Text\"\n    },\n    Markdown: {\n        name: \"Markdown\",\n        props: [\n            \"rules\"\n        ]\n    },\n    Caret: {\n        name: \"Caret\"\n    },\n    Forms: {\n        props: [\n            \"FormItem\",\n            \"FormTitle\"\n        ]\n    },\n    Flex: {\n        name: \"Flex\"\n    },\n    SearchBar: {\n        name: \"SearchBar\"\n    },\n    Spinner: {\n        name: \"Spinner\"\n    },\n    Scrollers: {\n        props: [\n            \"ScrollerAuto\",\n            \"ScrollerThin\",\n            \"default\"\n        ]\n    },\n    // Classes\n    Margins: {\n        props: [\n            \"marginXLarge\"\n        ]\n    },\n    FormClasses: {\n        props: [\n            \"formText\",\n            \"description\"\n        ]\n    },\n    // ContextMenu\n    ContextMenu: {\n        type: \"MERGE\",\n        props: [\n            [\n                \"openContextMenu\"\n            ],\n            [\n                \"MenuItem\",\n                \"MenuControlItem\"\n            ]\n        ],\n        rename: [\n            {\n                from: \"default\",\n                to: \"Menu\"\n            },\n            {\n                from: \"MenuItem\",\n                to: \"Item\"\n            },\n            {\n                from: \"MenuGroup\",\n                to: \"Group\"\n            },\n            {\n                from: \"MenuCheckboxItem\",\n                to: \"CheckboxItem\"\n            },\n            {\n                from: \"MenuSeparator\",\n                to: \"Separator\"\n            },\n            {\n                from: \"MenuCheckboxItem\",\n                to: \"CheckboxItem\"\n            },\n            {\n                from: \"MenuRadioItem\",\n                to: \"RadioItem\"\n            },\n            {\n                from: \"MenuStyle\",\n                to: \"Style\"\n            },\n            {\n                from: \"MenuControlItem\",\n                to: \"ControlItem\"\n            },\n            {\n                from: \"openContextMenu\",\n                to: \"open\"\n            },\n            {\n                from: \"closeContextMenu\",\n                to: \"close\"\n            }, \n        ]\n    },\n    PlaceholderClasses: {\n        props: [\n            \"emptyStateImage\",\n            \"emptyStateSubtext\"\n        ]\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/renderer/data/modules.ts\n");

/***/ }),

/***/ "./src/renderer/index.ts":
/*!*******************************!*\
  !*** ./src/renderer/index.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _modules_discord__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @modules/discord */ \"./src/renderer/modules/discord.ts\");\n/* harmony import */ var _common_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @common/logger */ \"./src/common/logger.ts\");\n/* harmony import */ var _modules_storage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @modules/storage */ \"./src/renderer/modules/storage.ts\");\n/* harmony import */ var _managers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./managers */ \"./src/renderer/managers/index.ts\");\n/* harmony import */ var _node_require__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node/require */ \"./src/renderer/node/require.ts\");\n/* harmony import */ var _modules__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules */ \"./src/renderer/modules/index.ts\");\n/// <reference path=\"../../types.d.ts\" />\n\n\n\n\n\n\nconst Logger = new _common_logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"Core\");\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (new class HolyMod {\n    async start() {\n        await _modules_discord__WEBPACK_IMPORTED_MODULE_0__.promise;\n        Logger.log(\"Initialize\");\n        this.injectStyles();\n        Object.assign(window, {\n            require: _node_require__WEBPACK_IMPORTED_MODULE_4__[\"default\"],\n            React: _modules_discord__WEBPACK_IMPORTED_MODULE_0__[\"default\"].React,\n            ReactDOM: _modules_discord__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ReactDOM\n        });\n        Object.assign(window.HolyAPI, _modules__WEBPACK_IMPORTED_MODULE_5__, {\n            Plugins: _managers__WEBPACK_IMPORTED_MODULE_3__.Plugins,\n            Themes: _managers__WEBPACK_IMPORTED_MODULE_3__.Themes\n        });\n        _modules_storage__WEBPACK_IMPORTED_MODULE_2__[\"default\"].initialize();\n        _managers__WEBPACK_IMPORTED_MODULE_3__.Plugins.initialize();\n    }\n    injectStyles() {\n        const { Path , FS  } = HolyAPI;\n        const path = Path.resolve(Path.getBasePath(), \"dist\", \"main.css\");\n        _modules__WEBPACK_IMPORTED_MODULE_5__.DOM.injectCSS(\"CoreStyles\", FS.readFile(path, \"utf8\"));\n    }\n    stop() {\n    }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFBLEVBQXlDO0FBRWlDO0FBQ2pDO0FBQ0g7QUFDSTtBQUNOO0FBQ0E7QUFFcEMsS0FBSyxDQUFDUyxNQUFNLEdBQUcsR0FBRyxDQUFDTixzREFBWSxDQUFDLENBQU07QUFFdEMsaUVBQWUsR0FBRyxPQUFPTyxPQUFPO1VBQ3RCQyxLQUFLLEdBQUcsQ0FBQztRQUNYLEtBQUssQ0FBQ1QscURBQWM7UUFDcEJPLE1BQU0sQ0FBQ0csR0FBRyxDQUFDLENBQVk7UUFFdkIsSUFBSSxDQUFDQyxZQUFZO1FBRWpCQyxNQUFNLENBQUNDLE1BQU0sQ0FBQ0MsTUFBTSxFQUFFLENBQUM7WUFDbkJDLE9BQU8sRUFBRVYscURBQU87WUFDaEJXLEtBQUssRUFBRWxCLDhEQUFvQjtZQUMzQm1CLFFBQVEsRUFBRW5CLGlFQUF1QjtRQUNyQyxDQUFDO1FBRURjLE1BQU0sQ0FBQ0MsTUFBTSxDQUFDQyxNQUFNLENBQUNJLE9BQU8sRUFBRVoscUNBQU8sRUFBRSxDQUFDSDtZQUFBQSxPQUFPO1lBQUVDLE1BQU07UUFBQSxDQUFDO1FBRXhERixtRUFBa0I7UUFDbEJDLHlEQUFrQjtJQUN0QixDQUFDO0lBRURRLFlBQVksR0FBUyxDQUFDO1FBQ2xCLEtBQUssQ0FBQyxDQUFDUyxDQUFBQSxJQUFJLEdBQUVDLEVBQUUsR0FBQyxHQUFHSCxPQUFPO1FBRTFCLEtBQUssQ0FBQ0ksSUFBSSxHQUFHRixJQUFJLENBQUNHLE9BQU8sQ0FBQ0gsSUFBSSxDQUFDSSxXQUFXLElBQUksQ0FBTSxPQUFFLENBQVU7UUFFaEVsQixtREFBcUIsQ0FBQyxDQUFZLGFBQUVlLEVBQUUsQ0FBQ00sUUFBUSxDQUFDTCxJQUFJLEVBQUUsQ0FBTTtJQUNoRSxDQUFDO0lBRURNLElBQUksR0FBRyxDQUFDO0lBQUEsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbHltb2QvLi9zcmMvcmVuZGVyZXIvaW5kZXgudHM/NjNhNiJdLCJzb3VyY2VzQ29udGVudCI6WyIvLy8gPHJlZmVyZW5jZSBwYXRoPVwiLi4vLi4vdHlwZXMuZC50c1wiIC8+XHJcblxyXG5pbXBvcnQgRGlzY29yZE1vZHVsZXMsIHtwcm9taXNlIGFzIERpc2NvcmRQcm9taXNlfSBmcm9tIFwiQG1vZHVsZXMvZGlzY29yZFwiO1xyXG5pbXBvcnQgTG9nZ2VyTW9kdWxlIGZyb20gXCJAY29tbW9uL2xvZ2dlclwiO1xyXG5pbXBvcnQgU3RvcmFnZSBmcm9tIFwiQG1vZHVsZXMvc3RvcmFnZVwiO1xyXG5pbXBvcnQge1BsdWdpbnMsIFRoZW1lc30gZnJvbSBcIi4vbWFuYWdlcnNcIjtcclxuaW1wb3J0IFJlcXVpcmUgZnJvbSBcIi4vbm9kZS9yZXF1aXJlXCI7XHJcbmltcG9ydCAqIGFzIE1vZHVsZXMgZnJvbSBcIi4vbW9kdWxlc1wiO1xyXG5cclxuY29uc3QgTG9nZ2VyID0gbmV3IExvZ2dlck1vZHVsZShcIkNvcmVcIik7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBuZXcgY2xhc3MgSG9seU1vZCB7XHJcbiAgICBhc3luYyBzdGFydCgpIHtcclxuICAgICAgICBhd2FpdCBEaXNjb3JkUHJvbWlzZTtcclxuICAgICAgICBMb2dnZXIubG9nKFwiSW5pdGlhbGl6ZVwiKTtcclxuICAgICAgICBcclxuICAgICAgICB0aGlzLmluamVjdFN0eWxlcygpO1xyXG5cclxuICAgICAgICBPYmplY3QuYXNzaWduKHdpbmRvdywge1xyXG4gICAgICAgICAgICByZXF1aXJlOiBSZXF1aXJlLFxyXG4gICAgICAgICAgICBSZWFjdDogRGlzY29yZE1vZHVsZXMuUmVhY3QsXHJcbiAgICAgICAgICAgIFJlYWN0RE9NOiBEaXNjb3JkTW9kdWxlcy5SZWFjdERPTVxyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICBPYmplY3QuYXNzaWduKHdpbmRvdy5Ib2x5QVBJLCBNb2R1bGVzLCB7UGx1Z2lucywgVGhlbWVzfSk7XHJcblxyXG4gICAgICAgIFN0b3JhZ2UuaW5pdGlhbGl6ZSgpO1xyXG4gICAgICAgIFBsdWdpbnMuaW5pdGlhbGl6ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIGluamVjdFN0eWxlcygpOiB2b2lkIHtcclxuICAgICAgICBjb25zdCB7UGF0aCwgRlN9ID0gSG9seUFQSTtcclxuXHJcbiAgICAgICAgY29uc3QgcGF0aCA9IFBhdGgucmVzb2x2ZShQYXRoLmdldEJhc2VQYXRoKCksIFwiZGlzdFwiLCBcIm1haW4uY3NzXCIpO1xyXG5cclxuICAgICAgICBNb2R1bGVzLkRPTS5pbmplY3RDU1MoXCJDb3JlU3R5bGVzXCIsIEZTLnJlYWRGaWxlKHBhdGgsIFwidXRmOFwiKSk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RvcCgpIHt9XHJcbn0iXSwibmFtZXMiOlsiRGlzY29yZE1vZHVsZXMiLCJwcm9taXNlIiwiRGlzY29yZFByb21pc2UiLCJMb2dnZXJNb2R1bGUiLCJTdG9yYWdlIiwiUGx1Z2lucyIsIlRoZW1lcyIsIlJlcXVpcmUiLCJNb2R1bGVzIiwiTG9nZ2VyIiwiSG9seU1vZCIsInN0YXJ0IiwibG9nIiwiaW5qZWN0U3R5bGVzIiwiT2JqZWN0IiwiYXNzaWduIiwid2luZG93IiwicmVxdWlyZSIsIlJlYWN0IiwiUmVhY3RET00iLCJIb2x5QVBJIiwiaW5pdGlhbGl6ZSIsIlBhdGgiLCJGUyIsInBhdGgiLCJyZXNvbHZlIiwiZ2V0QmFzZVBhdGgiLCJET00iLCJpbmplY3RDU1MiLCJyZWFkRmlsZSIsInN0b3AiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/renderer/index.ts\n");

/***/ }),

/***/ "./src/renderer/managers/index.ts":
/*!****************************************!*\
  !*** ./src/renderer/managers/index.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Plugins\": () => (/* reexport safe */ _plugins__WEBPACK_IMPORTED_MODULE_0__[\"default\"]),\n/* harmony export */   \"Themes\": () => (/* reexport safe */ _themes__WEBPACK_IMPORTED_MODULE_1__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _plugins__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./plugins */ \"./src/renderer/managers/plugins.ts\");\n/* harmony import */ var _themes__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./themes */ \"./src/renderer/managers/themes.ts\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvbWFuYWdlcnMvaW5kZXgudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE0QztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9seW1vZC8uL3NyYy9yZW5kZXJlci9tYW5hZ2Vycy9pbmRleC50cz8zMTAzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7ZGVmYXVsdCBhcyBQbHVnaW5zfSBmcm9tIFwiLi9wbHVnaW5zXCI7XHJcbmV4cG9ydCB7ZGVmYXVsdCBhcyBUaGVtZXN9IGZyb20gXCIuL3RoZW1lc1wiOyJdLCJuYW1lcyI6WyJkZWZhdWx0IiwiUGx1Z2lucyIsIlRoZW1lcyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/renderer/managers/index.ts\n");

/***/ }),

/***/ "./src/renderer/managers/plugins.ts":
/*!******************************************!*\
  !*** ./src/renderer/managers/plugins.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _classes_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @classes/store */ \"./src/renderer/classes/store.ts\");\n/* harmony import */ var _common_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @common/logger */ \"./src/common/logger.ts\");\n/* harmony import */ var _modules_settings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @modules/settings */ \"./src/renderer/modules/settings.ts\");\n/* harmony import */ var _modules_storage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @modules/storage */ \"./src/renderer/modules/storage.ts\");\n/* harmony import */ var _modules_util__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @modules/util */ \"./src/renderer/modules/util.ts\");\n/* harmony import */ var _node_module__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @node/module */ \"./src/renderer/node/module.ts\");\n/* harmony import */ var _node_require__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @node/require */ \"./src/renderer/node/require.ts\");\n/* harmony import */ var _ui_addons_panel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ui/addons/panel */ \"./src/renderer/ui/addons/panel.tsx\");\n\n\n\n\n\n\n\n\nconst { FS , Path  } = HolyAPI;\nconst Logger = new _common_logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"PluginsManager\");\nconst PluginsManager = new class PluginsManager extends _classes_store__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    initialize() {\n        this.enabledPlugins = new Set(Object.keys(_modules_storage__WEBPACK_IMPORTED_MODULE_3__[\"default\"].get(\"plugins\", {\n        })));\n        _modules_settings__WEBPACK_IMPORTED_MODULE_2__[\"default\"].registerPanel(\"plugins\", {\n            label: \"Plugins\",\n            order: 1,\n            render: ()=>React.createElement(_ui_addons_panel__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                    type: \"plugins\",\n                    manager: this,\n                    toggle: this.toggle.bind(this),\n                    addons: this.plugins,\n                    isEnabled: (plugin)=>{\n                        plugin = this.resolve(plugin);\n                        if (!plugin) return false;\n                        return this.enabledPlugins.has(plugin.id);\n                    }\n                })\n        });\n        this.loadAllPlugins();\n    }\n    resolve(pluginOrId) {\n        if (typeof pluginOrId === \"string\") return this.plugins.get(pluginOrId);\n        return pluginOrId;\n    }\n    getManifest(filepath, filename) {\n        try {\n            return JSON.parse(FS.readFile(filepath, \"utf8\"));\n        } catch (error) {\n            Logger.error(`Failed to load manifest for ${filename}:`, error);\n            return null;\n        }\n    }\n    getEntryFile(filepath, manifest, filename) {\n        if (typeof manifest.entry === \"string\") {\n            const path = Path.resolve(filepath, manifest.entry);\n            if (FS.exists(path)) return path;\n        }\n        const found = this.extensions.find((ext)=>FS.exists(Path.resolve(filepath, \"index\" + ext))\n        );\n        if (found) return found;\n        Logger.error(`Failed to get entry file for ${filename}:`, new Error(\"Could not resolve entry file.\"));\n        return null;\n    }\n    loadAllPlugins() {\n        if (!FS.exists(this.folder)) {\n            Logger.log(\"Plugins folder doesn't exists, creating it...\");\n            try {\n                FS.createDirectory(this.folder);\n            } catch (error) {\n                Logger.error(\"Failed to create plugins directory:\", error);\n                return;\n            }\n        }\n        Logger.log(\"Loading plugins...\");\n        const filenames = FS.readDirectory(this.folder);\n        for(let i = 0; i < filenames.length; i++){\n            const filename = Path.resolve(this.folder, filenames[i]);\n            const manifestPath = Path.resolve(filename, \"manifest.json\");\n            if (!FS.exists(manifestPath)) continue;\n            this.loadPlugin(filename, true);\n        }\n    }\n    clearCache(location) {\n        if (!Path.isAbsolute(location)) location = Path.resolve(this.folder, location);\n        let current;\n        while(current = _node_require__WEBPACK_IMPORTED_MODULE_6__[\"default\"].resolve(location)){\n            delete _node_module__WEBPACK_IMPORTED_MODULE_5__[\"default\"].cache[current];\n        }\n    }\n    loadPlugin(filename, log = true) {\n        const manifestPath = Path.resolve(filename, \"manifest.json\");\n        const manifest = this.getManifest(manifestPath, Path.basename(filename));\n        if (!manifest) return;\n        const entryFile = this.getEntryFile(filename, manifest, Path.basename(filename));\n        const id = Path.basename(filename);\n        if (!entryFile) return;\n        let exports = {\n        };\n        try {\n            this.clearCache(filename);\n            const partialExports = (0,_node_require__WEBPACK_IMPORTED_MODULE_6__[\"default\"])(entryFile);\n            exports = partialExports.__esModule ? partialExports.default : partialExports;\n            _modules_util__WEBPACK_IMPORTED_MODULE_4__[\"default\"].assign(exports.prototype, {\n                manifest: Object.freeze(manifest),\n                id: id,\n                displayName: manifest.name ?? id,\n                path: filename\n            });\n            exports = new exports();\n        } catch (error) {\n            return Logger.error(`Failed to compile ${manifest.name ?? id}:`, error);\n        }\n        if (log) {\n            Logger.log(`${exports.displayName} was loaded!`);\n        }\n        this.plugins.set(id, exports);\n        if (this.enabledPlugins.has(id)) {\n            this.startPlugin(id, true);\n        }\n    }\n    unloadPlugin(addon, log = true) {\n        const plugin = this.resolve(addon);\n        if (!plugin) return;\n        const success = this.stopPlugin(plugin);\n        this.plugins.delete(plugin.id);\n        this.clearCache(addon.path);\n        if (log) {\n            Logger.log(`${plugin.displayName} was unloaded!`);\n        }\n        return success;\n    }\n    startPlugin(addon, log = true) {\n        const plugin = this.resolve(addon);\n        if (!plugin) return;\n        try {\n            if (typeof plugin.onStart === \"function\") plugin.onStart();\n        } catch (error) {\n            Logger.error(`Could not start ${plugin.displayName}:`, error);\n            return false;\n        } finally{\n            if (log) {\n                Logger.log(`${plugin.displayName} was started!`);\n            }\n            return true;\n        }\n    }\n    stopPlugin(addon, log = true) {\n        const plugin = this.resolve(addon);\n        if (!plugin) return false;\n        try {\n            if (typeof plugin.onStop === \"function\") plugin.onStop();\n        } catch (error) {\n            Logger.error(`Failed to stop ${plugin.manifest.name}:`, error);\n            return false;\n        } finally{\n            if (log) {\n                Logger.log(`${plugin.manifest.name} was stopped!`);\n            }\n            return true;\n        }\n    }\n    reloadPlugin(addon) {\n        const plugin = this.resolve(addon);\n        if (!addon) return;\n        const success = this.unloadPlugin(plugin, false);\n        if (!success) {\n            return Logger.error(`Failed to reload plugin ${plugin.displayName}`);\n        }\n        this.loadPlugin(plugin.path, false);\n        Logger.log(`Reloaded ${plugin.displayName}`);\n    }\n    enablePlugin(addon, log = true) {\n        const plugin = this.resolve(addon);\n        if (!addon) return;\n        this.enabledPlugins.add(plugin.id);\n        this.saveState();\n        this.startPlugin(plugin, false);\n        if (log) {\n            Logger.log(`${plugin.displayName} was enabled!`);\n            this.emit(\"toggle\", plugin.id, true);\n        }\n    }\n    disablePlugin(addon, log = true) {\n        const plugin = this.resolve(addon);\n        if (!addon) return;\n        this.enabledPlugins.delete(plugin.id);\n        this.saveState();\n        this.stopPlugin(plugin, false);\n        if (log) {\n            Logger.log(`${plugin.displayName} was disabled!`);\n            this.emit(\"toggle\", plugin.id, false);\n        }\n    }\n    toggle(addon) {\n        const plugin = this.resolve(addon);\n        if (!plugin) return;\n        if (this.enabledPlugins.has(plugin.id)) {\n            this.disablePlugin(plugin, true);\n        } else {\n            this.enablePlugin(plugin, true);\n        }\n    }\n    saveState() {\n        _modules_storage__WEBPACK_IMPORTED_MODULE_3__[\"default\"].set(\"plugins\", Object.fromEntries([\n            ...this.enabledPlugins.values()\n        ].map((key)=>[\n                key,\n                true\n            ]\n        )));\n    }\n    constructor(...args){\n        super(...args);\n        this.folder = Path.resolve(Path.getBasePath(), \"plugins\");\n        this.extensions = [\n            \".js\",\n            \".jsx\",\n            \".ts\",\n            \".tsx\",\n            \".mjs\"\n        ];\n        this.plugins = new Map();\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (PluginsManager);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/renderer/managers/plugins.ts\n");

/***/ }),

/***/ "./src/renderer/managers/themes.ts":
/*!*****************************************!*\
  !*** ./src/renderer/managers/themes.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ThemesManager)\n/* harmony export */ });\nclass ThemesManager {\n    initialize() {\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvbWFuYWdlcnMvdGhlbWVzLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7TUFBcUJBLGFBQWE7SUFDOUJDLFVBQVUsR0FBUyxDQUFDO0lBRXBCLENBQUM7O0FBSDZCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9seW1vZC8uL3NyYy9yZW5kZXJlci9tYW5hZ2Vycy90aGVtZXMudHM/MDEyMCJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBUaGVtZXNNYW5hZ2VyIHtcclxuICAgIGluaXRpYWxpemUoKTogdm9pZCB7XHJcbiAgICAgICAgXHJcbiAgICB9XHJcbn0iXSwibmFtZXMiOlsiVGhlbWVzTWFuYWdlciIsImluaXRpYWxpemUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/renderer/managers/themes.ts\n");

/***/ }),

/***/ "./src/renderer/modules/discord.ts":
/*!*****************************************!*\
  !*** ./src/renderer/modules/discord.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DiscordModules\": () => (/* binding */ DiscordModules),\n/* harmony export */   \"promise\": () => (/* binding */ promise),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _register__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./register */ \"./src/renderer/modules/register.ts\");\n/* harmony import */ var _register__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_register__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _webpack__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webpack */ \"./src/renderer/modules/webpack.ts\");\n/* harmony import */ var _data_modules__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @data/modules */ \"./src/renderer/data/modules.ts\");\n\n\n\nconst DiscordModules = {\n};\nconst NOOP_RET = (_)=>_\n;\nconst filters = new Promise((resolve)=>{\n    const result = [];\n    for(let moduleId in _data_modules__WEBPACK_IMPORTED_MODULE_2__[\"default\"]){\n        const module = _data_modules__WEBPACK_IMPORTED_MODULE_2__[\"default\"][moduleId];\n        let filter = NOOP_RET, map = null;\n        if (Array.isArray(module.props)) {\n            switch(module.type){\n                case \"MERGE\":\n                    {\n                        let found = [];\n                        filter = (m)=>{\n                            const matches = module.props.some((props)=>props.every((prop)=>prop in m\n                                )\n                            );\n                            if (matches) found.push(m);\n                            return matches;\n                        };\n                        map = ()=>{\n                            return Object.assign({\n                            }, ...found);\n                        };\n                        break;\n                    }\n                default:\n                    {\n                        filter = (m)=>module.props.every((prop)=>prop in m\n                            )\n                        ;\n                    }\n            }\n        }\n        if (module.rename) {\n            const current = map ?? NOOP_RET;\n            map = (mod)=>{\n                mod = current(mod);\n                const cloned = {\n                    ...mod\n                };\n                for (const { from , to  } of module.rename){\n                    cloned[to] = mod[from];\n                    delete cloned[from];\n                }\n                return cloned;\n            };\n        }\n        if (module.name) {\n            const current = filter;\n            filter = (mod)=>mod.displayName === module.name && current(mod)\n            ;\n        }\n        if (typeof module.ensure === \"function\") {\n            const current = filter;\n            filter = (mod)=>current(mod) && module.ensure(mod)\n            ;\n        }\n        if (typeof filter !== \"function\") continue;\n        result.push({\n            filter,\n            map,\n            id: moduleId\n        });\n    }\n    resolve(result);\n});\nconst promise = Promise.all([\n    filters,\n    _webpack__WEBPACK_IMPORTED_MODULE_1__[\"default\"].whenReady\n]).then(([filters1])=>{\n    const result = _webpack__WEBPACK_IMPORTED_MODULE_1__[\"default\"].bulk(...filters1.map(({ filter  })=>filter\n    ));\n    Object.assign(DiscordModules, filters1.reduce((modules, { id , map  }, index)=>{\n        const mapper = map ?? NOOP_RET;\n        modules[id] = mapper(result[index]);\n        return modules;\n    }, {\n    }));\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (DiscordModules);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvbW9kdWxlcy9kaXNjb3JkLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBbUI7QUFFWTtBQUNJO0FBRTVCLEtBQUssQ0FBQ0UsY0FBYyxHQUF5QyxDQUFDO0FBQUEsQ0FBQztBQUN0RSxLQUFLLENBQUNDLFFBQVEsSUFBR0MsQ0FBQyxHQUFJQSxDQUFDOztBQUN2QixLQUFLLENBQUNDLE9BQU8sR0FBRyxHQUFHLENBQUNDLE9BQU8sRUFBUUMsT0FBTyxHQUFJLENBQUM7SUFDM0MsS0FBSyxDQUFDQyxNQUFNLEdBQUcsQ0FBQyxDQUFDO0lBRWpCLEdBQUcsQ0FBRSxHQUFHLENBQUNDLFFBQVEsSUFBSVIscURBQU8sQ0FBRSxDQUFDO1FBQzNCLEtBQUssQ0FBQ1MsTUFBTSxHQUFHVCxxREFBTyxDQUFDUSxRQUFRO1FBQy9CLEdBQUcsQ0FBQ0UsTUFBTSxHQUFHUixRQUFRLEVBQUVTLEdBQUcsR0FBRyxJQUFJO1FBRWpDLEVBQUUsRUFBRUMsS0FBSyxDQUFDQyxPQUFPLENBQUNKLE1BQU0sQ0FBQ0ssS0FBSyxHQUFHLENBQUM7WUFDOUIsTUFBTSxDQUFFTCxNQUFNLENBQUNNLElBQUk7Z0JBQ2YsSUFBSSxDQUFDLENBQU87b0JBQUUsQ0FBQzt3QkFDWCxHQUFHLENBQUNDLEtBQUssR0FBRyxDQUFDLENBQUM7d0JBRWROLE1BQU0sSUFBSU8sQ0FBTSxHQUFLLENBQUM7NEJBQ2xCLEtBQUssQ0FBQ0MsT0FBTyxHQUFHVCxNQUFNLENBQUNLLEtBQUssQ0FBQ0ssSUFBSSxFQUFFTCxLQUFlLEdBQUtBLEtBQUssQ0FBQ00sS0FBSyxFQUFDQyxJQUFJLEdBQUlBLElBQUksSUFBSUosQ0FBQzs7OzRCQUNwRixFQUFFLEVBQUVDLE9BQU8sRUFBRUYsS0FBSyxDQUFDTSxJQUFJLENBQUNMLENBQUM7NEJBRXpCLE1BQU0sQ0FBQ0MsT0FBTzt3QkFDbEIsQ0FBQzt3QkFFRFAsR0FBRyxPQUFTLENBQUM7NEJBQ1QsTUFBTSxDQUFDWSxNQUFNLENBQUNDLE1BQU0sQ0FBQyxDQUFDOzRCQUFBLENBQUMsS0FBS1IsS0FBSzt3QkFDckMsQ0FBQzt3QkFFRCxLQUFLO29CQUNULENBQUM7O29CQUVRLENBQUM7d0JBQ05OLE1BQU0sSUFBSU8sQ0FBTSxHQUFLUixNQUFNLENBQUNLLEtBQUssQ0FBQ00sS0FBSyxFQUFFQyxJQUFZLEdBQUtBLElBQUksSUFBSUosQ0FBQzs7O29CQUN2RSxDQUFDOztRQUVULENBQUM7UUFFRCxFQUFFLEVBQUVSLE1BQU0sQ0FBQ2dCLE1BQU0sRUFBRSxDQUFDO1lBQ2hCLEtBQUssQ0FBQ0MsT0FBTyxHQUFHZixHQUFHLElBQUlULFFBQVE7WUFDL0JTLEdBQUcsSUFBSWdCLEdBQVEsR0FBSyxDQUFDO2dCQUNqQkEsR0FBRyxHQUFHRCxPQUFPLENBQUNDLEdBQUc7Z0JBQ2pCLEtBQUssQ0FBQ0MsTUFBTSxHQUFHLENBQUM7dUJBQUdELEdBQUc7Z0JBQUEsQ0FBQztnQkFFdkIsR0FBRyxFQUFFLEtBQUssQ0FBQyxDQUFDRSxDQUFBQSxJQUFJLEdBQUVDLEVBQUUsR0FBQyxJQUFJckIsTUFBTSxDQUFDZ0IsTUFBTSxDQUFFLENBQUM7b0JBQ3JDRyxNQUFNLENBQUNFLEVBQUUsSUFBSUgsR0FBRyxDQUFDRSxJQUFJO29CQUNyQixNQUFNLENBQUNELE1BQU0sQ0FBQ0MsSUFBSTtnQkFDdEIsQ0FBQztnQkFFRCxNQUFNLENBQUNELE1BQU07WUFDakIsQ0FBQztRQUNMLENBQUM7UUFFRCxFQUFFLEVBQUVuQixNQUFNLENBQUNzQixJQUFJLEVBQUUsQ0FBQztZQUNkLEtBQUssQ0FBQ0wsT0FBTyxHQUFHaEIsTUFBTTtZQUN0QkEsTUFBTSxJQUFJaUIsR0FBUSxHQUFNQSxHQUFHLENBQUNLLFdBQVcsS0FBS3ZCLE1BQU0sQ0FBQ3NCLElBQUksSUFBS0wsT0FBTyxDQUFDQyxHQUFHOztRQUMzRSxDQUFDO1FBRUQsRUFBRSxFQUFFLE1BQU0sQ0FBQ2xCLE1BQU0sQ0FBQ3dCLE1BQU0sS0FBTSxDQUFVLFdBQUUsQ0FBQztZQUN2QyxLQUFLLENBQUNQLE9BQU8sR0FBR2hCLE1BQU07WUFDdEJBLE1BQU0sSUFBSWlCLEdBQVEsR0FBS0QsT0FBTyxDQUFDQyxHQUFHLEtBQUtsQixNQUFNLENBQUN3QixNQUFNLENBQUNOLEdBQUc7O1FBQzVELENBQUM7UUFFRCxFQUFFLEVBQUUsTUFBTSxDQUFFakIsTUFBTSxLQUFNLENBQVUsV0FBRSxRQUFRO1FBRTVDSCxNQUFNLENBQUNlLElBQUksQ0FBQyxDQUFDWjtZQUFBQSxNQUFNO1lBQUVDLEdBQUc7WUFBRXVCLEVBQUUsRUFBRTFCLFFBQVE7UUFBQSxDQUFDO0lBQzNDLENBQUM7SUFFREYsT0FBTyxDQUFDQyxNQUFNO0FBQ2xCLENBQUM7QUFFTSxLQUFLLENBQUM0QixPQUFPLEdBQUc5QixPQUFPLENBQUMrQixHQUFHLENBQUMsQ0FBQ2hDO0lBQUFBLE9BQU87SUFBRUwsMERBQWlCO0FBQUEsQ0FBQyxFQUFFdUMsSUFBSSxHQUFHbEMsUUFBTyxJQUFNLENBQUM7SUFDbEYsS0FBSyxDQUFDRyxNQUFNLEdBQUdSLHFEQUFZLElBQUlLLFFBQU8sQ0FBQ08sR0FBRyxFQUFFLENBQUNELENBQUFBLE1BQU0sR0FBQyxHQUFLQSxNQUFNOztJQUUvRGEsTUFBTSxDQUFDQyxNQUFNLENBQUN2QixjQUFjLEVBQ3hCRyxRQUFPLENBQUNvQyxNQUFNLEVBQUVDLE9BQU8sRUFBRSxDQUFDUCxDQUFBQSxFQUFFLEdBQUV2QixHQUFHLEdBQUMsRUFBRStCLEtBQUssR0FBSyxDQUFDO1FBQzNDLEtBQUssQ0FBQ0MsTUFBTSxHQUFHaEMsR0FBRyxJQUFJVCxRQUFRO1FBQzlCdUMsT0FBTyxDQUFDUCxFQUFFLElBQUlTLE1BQU0sQ0FBQ3BDLE1BQU0sQ0FBQ21DLEtBQUs7UUFFakMsTUFBTSxDQUFDRCxPQUFPO0lBQ2xCLENBQUMsRUFBRSxDQUFDO0lBQUEsQ0FBQztBQUViLENBQUM7QUFFRCxpRUFBZXhDLGNBQWMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbHltb2QvLi9zcmMvcmVuZGVyZXIvbW9kdWxlcy9kaXNjb3JkLnRzP2IzYzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFwiLi9yZWdpc3RlclwiO1xyXG5cclxuaW1wb3J0IFdlYnBhY2sgZnJvbSBcIi4vd2VicGFja1wiO1xyXG5pbXBvcnQgTW9kdWxlcyBmcm9tIFwiQGRhdGEvbW9kdWxlc1wiO1xyXG5cclxuZXhwb3J0IGNvbnN0IERpc2NvcmRNb2R1bGVzOiB7W2tleSBpbiBrZXlvZiB0eXBlb2YgTW9kdWxlc106IGFueX0gPSB7fSBhcyB1bmtub3duIGFzIGFueTtcclxuY29uc3QgTk9PUF9SRVQgPSBfID0+IF87XHJcbmNvbnN0IGZpbHRlcnMgPSBuZXcgUHJvbWlzZTxhbnlbXT4ocmVzb2x2ZSA9PiB7XHJcbiAgICBjb25zdCByZXN1bHQgPSBbXTtcclxuXHJcbiAgICBmb3IgKGxldCBtb2R1bGVJZCBpbiBNb2R1bGVzKSB7XHJcbiAgICAgICAgY29uc3QgbW9kdWxlID0gTW9kdWxlc1ttb2R1bGVJZF07XHJcbiAgICAgICAgbGV0IGZpbHRlciA9IE5PT1BfUkVULCBtYXAgPSBudWxsO1xyXG5cclxuICAgICAgICBpZiAoQXJyYXkuaXNBcnJheShtb2R1bGUucHJvcHMpKSB7XHJcbiAgICAgICAgICAgIHN3aXRjaCAobW9kdWxlLnR5cGUpIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgXCJNRVJHRVwiOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGZvdW5kID0gW107XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGZpbHRlciA9IChtOiBhbnkpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc3QgbWF0Y2hlcyA9IG1vZHVsZS5wcm9wcy5zb21lKChwcm9wczogc3RyaW5nW10pID0+IHByb3BzLmV2ZXJ5KHByb3AgPT4gcHJvcCBpbiBtKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChtYXRjaGVzKSBmb3VuZC5wdXNoKG0pO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG1hdGNoZXM7XHJcbiAgICAgICAgICAgICAgICAgICAgfTtcclxuXHJcbiAgICAgICAgICAgICAgICAgICAgbWFwID0gKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgLi4uZm91bmQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH07XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfTtcclxuICAgICAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgIGRlZmF1bHQ6IHtcclxuICAgICAgICAgICAgICAgICAgICBmaWx0ZXIgPSAobTogYW55KSA9PiBtb2R1bGUucHJvcHMuZXZlcnkoKHByb3A6IHN0cmluZykgPT4gcHJvcCBpbiBtKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKG1vZHVsZS5yZW5hbWUpIHtcclxuICAgICAgICAgICAgY29uc3QgY3VycmVudCA9IG1hcCA/PyBOT09QX1JFVDtcclxuICAgICAgICAgICAgbWFwID0gKG1vZDogYW55KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBtb2QgPSBjdXJyZW50KG1vZCk7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBjbG9uZWQgPSB7Li4ubW9kfTtcclxuXHJcbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IHtmcm9tLCB0b30gb2YgbW9kdWxlLnJlbmFtZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNsb25lZFt0b10gPSBtb2RbZnJvbV07XHJcbiAgICAgICAgICAgICAgICAgICAgZGVsZXRlIGNsb25lZFtmcm9tXTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICByZXR1cm4gY2xvbmVkO1xyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKG1vZHVsZS5uYW1lKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGN1cnJlbnQgPSBmaWx0ZXI7XHJcbiAgICAgICAgICAgIGZpbHRlciA9IChtb2Q6IGFueSkgPT4gKG1vZC5kaXNwbGF5TmFtZSA9PT0gbW9kdWxlLm5hbWUpICYmIGN1cnJlbnQobW9kKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0eXBlb2YobW9kdWxlLmVuc3VyZSkgPT09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgICAgICAgICBjb25zdCBjdXJyZW50ID0gZmlsdGVyO1xyXG4gICAgICAgICAgICBmaWx0ZXIgPSAobW9kOiBhbnkpID0+IGN1cnJlbnQobW9kKSAmJiBtb2R1bGUuZW5zdXJlKG1vZCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodHlwZW9mIChmaWx0ZXIpICE9PSBcImZ1bmN0aW9uXCIpIGNvbnRpbnVlO1xyXG5cclxuICAgICAgICByZXN1bHQucHVzaCh7ZmlsdGVyLCBtYXAsIGlkOiBtb2R1bGVJZH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJlc29sdmUocmVzdWx0KTtcclxufSk7XHJcblxyXG5leHBvcnQgY29uc3QgcHJvbWlzZSA9IFByb21pc2UuYWxsKFtmaWx0ZXJzLCBXZWJwYWNrLndoZW5SZWFkeV0pLnRoZW4oKFtmaWx0ZXJzXSkgPT4ge1xyXG4gICAgY29uc3QgcmVzdWx0ID0gV2VicGFjay5idWxrKC4uLmZpbHRlcnMubWFwKCh7ZmlsdGVyfSkgPT4gZmlsdGVyKSk7XHJcblxyXG4gICAgT2JqZWN0LmFzc2lnbihEaXNjb3JkTW9kdWxlcyxcclxuICAgICAgICBmaWx0ZXJzLnJlZHVjZSgobW9kdWxlcywge2lkLCBtYXB9LCBpbmRleCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBtYXBwZXIgPSBtYXAgPz8gTk9PUF9SRVQ7XHJcbiAgICAgICAgICAgIG1vZHVsZXNbaWRdID0gbWFwcGVyKHJlc3VsdFtpbmRleF0pO1xyXG5cclxuICAgICAgICAgICAgcmV0dXJuIG1vZHVsZXM7XHJcbiAgICAgICAgfSwge30pXHJcbiAgICApO1xyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IERpc2NvcmRNb2R1bGVzOyJdLCJuYW1lcyI6WyJXZWJwYWNrIiwiTW9kdWxlcyIsIkRpc2NvcmRNb2R1bGVzIiwiTk9PUF9SRVQiLCJfIiwiZmlsdGVycyIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVzdWx0IiwibW9kdWxlSWQiLCJtb2R1bGUiLCJmaWx0ZXIiLCJtYXAiLCJBcnJheSIsImlzQXJyYXkiLCJwcm9wcyIsInR5cGUiLCJmb3VuZCIsIm0iLCJtYXRjaGVzIiwic29tZSIsImV2ZXJ5IiwicHJvcCIsInB1c2giLCJPYmplY3QiLCJhc3NpZ24iLCJyZW5hbWUiLCJjdXJyZW50IiwibW9kIiwiY2xvbmVkIiwiZnJvbSIsInRvIiwibmFtZSIsImRpc3BsYXlOYW1lIiwiZW5zdXJlIiwiaWQiLCJwcm9taXNlIiwiYWxsIiwid2hlblJlYWR5IiwidGhlbiIsImJ1bGsiLCJyZWR1Y2UiLCJtb2R1bGVzIiwiaW5kZXgiLCJtYXBwZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/renderer/modules/discord.ts\n");

/***/ }),

/***/ "./src/renderer/modules/dom.ts":
/*!*************************************!*\
  !*** ./src/renderer/modules/dom.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ DOM)\n/* harmony export */ });\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./src/renderer/modules/util.ts\");\n\nclass DOM {\n    static get head() {\n        return _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].memoize(this, \"head\", document.head.appendChild(this.createElement(\"holy-head\")));\n    }\n    static createElement(type, options = {\n    }, ...children) {\n        const node = Object.assign(document.createElement(type), options);\n        node.append(...children);\n        return node;\n    }\n    static injectCSS(id, cssOrURL, options) {\n        switch(options?.type ?? \"PLAIN\"){\n            case \"PLAIN\":\n                var element = this.createElement(\"style\", {\n                    id,\n                    textContent: cssOrURL\n                });\n                break;\n            case \"URL\":\n                var element = this.createElement(\"link\", {\n                    rel: \"stylesheet\",\n                    href: cssOrURL\n                });\n                break;\n        }\n        (options?.documentHead ? document.head : this.head).appendChild(element);\n        this.elements[id] = element;\n        return element;\n    }\n    static injectJS(id, url, options) {\n        return new Promise((resolve, reject)=>{\n            const script = this.createElement(\"script\", {\n                id,\n                src: url,\n                onload: resolve,\n                onerror: reject\n            });\n            (options?.documentHead ? document.head : this.head).appendChild(script);\n            this.elements[id] = script;\n        });\n    }\n    static getElement(id) {\n        return this.elements[id] || this.head.querySelector(`style[id=\"${id}\"]`);\n    }\n    static clearCSS(id) {\n        const element = this.getElement(id);\n        if (element) element.remove();\n        delete this.elements[id];\n    }\n}\nDOM.elements = {\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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R0FBRyxDQUNicUIsUUFBUSxHQUFHLENBQUM7QUFBQSxDQUFDO0FBREEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob2x5bW9kLy4vc3JjL3JlbmRlcmVyL21vZHVsZXMvZG9tLnRzP2I5NzgiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFV0aWxpdGllcyBmcm9tIFwiLi91dGlsXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBET00ge1xyXG4gICAgc3RhdGljIGVsZW1lbnRzID0ge307XHJcblxyXG4gICAgc3RhdGljIGdldCBoZWFkKCkge3JldHVybiBVdGlsaXRpZXMubWVtb2l6ZSh0aGlzLCBcImhlYWRcIiwgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZCh0aGlzLmNyZWF0ZUVsZW1lbnQoXCJob2x5LWhlYWRcIikpKTt9XHJcblxyXG4gICAgc3RhdGljIGNyZWF0ZUVsZW1lbnQodHlwZTogc3RyaW5nLCBvcHRpb25zID0ge30sIC4uLmNoaWxkcmVuOiAoc3RyaW5nIHwgTm9kZSlbXSkge1xyXG4gICAgICAgIGNvbnN0IG5vZGUgPSBPYmplY3QuYXNzaWduKGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQodHlwZSksIG9wdGlvbnMpO1xyXG5cclxuICAgICAgICBub2RlLmFwcGVuZCguLi5jaGlsZHJlbik7XHJcblxyXG4gICAgICAgIHJldHVybiBub2RlO1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBpbmplY3RDU1MoaWQ6IHN0cmluZywgY3NzT3JVUkw6IHN0cmluZywgb3B0aW9ucz86IHt0eXBlOiBcIlBMQUlOXCIgfCBcIlVSTFwiLCBkb2N1bWVudEhlYWQ/OiBib29sZWFufSkge1xyXG4gICAgICAgIHN3aXRjaCAob3B0aW9ucz8udHlwZSA/PyBcIlBMQUlOXCIpIHtcclxuICAgICAgICAgICAgY2FzZSBcIlBMQUlOXCI6XHJcbiAgICAgICAgICAgICAgICB2YXIgZWxlbWVudCA9IHRoaXMuY3JlYXRlRWxlbWVudChcInN0eWxlXCIsIHtcclxuICAgICAgICAgICAgICAgICAgICBpZCxcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0Q29udGVudDogY3NzT3JVUkxcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgXCJVUkxcIjpcclxuICAgICAgICAgICAgICAgIHZhciBlbGVtZW50ID0gdGhpcy5jcmVhdGVFbGVtZW50KFwibGlua1wiLCB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVsOiBcInN0eWxlc2hlZXRcIixcclxuICAgICAgICAgICAgICAgICAgICBocmVmOiBjc3NPclVSTFxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIChvcHRpb25zPy5kb2N1bWVudEhlYWQgPyBkb2N1bWVudC5oZWFkIDogdGhpcy5oZWFkKS5hcHBlbmRDaGlsZChlbGVtZW50KTtcclxuICAgICAgICB0aGlzLmVsZW1lbnRzW2lkXSA9IGVsZW1lbnQ7XHJcblxyXG4gICAgICAgIHJldHVybiBlbGVtZW50O1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBpbmplY3RKUyhpZDogc3RyaW5nLCB1cmw6IHN0cmluZywgb3B0aW9ucz86IHtkb2N1bWVudEhlYWQ6IGJvb2xlYW59KSB7XHJcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcclxuICAgICAgICAgICAgY29uc3Qgc2NyaXB0ID0gdGhpcy5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIsIHtpZCwgc3JjOiB1cmwsIG9ubG9hZDogcmVzb2x2ZSwgb25lcnJvcjogcmVqZWN0fSk7XHJcbiAgICAgICAgICAgIChvcHRpb25zPy5kb2N1bWVudEhlYWQgPyBkb2N1bWVudC5oZWFkIDogdGhpcy5oZWFkKS5hcHBlbmRDaGlsZChzY3JpcHQpO1xyXG4gICAgICAgICAgICB0aGlzLmVsZW1lbnRzW2lkXSA9IHNjcmlwdDtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ2V0RWxlbWVudChpZDogc3RyaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZWxlbWVudHNbaWRdIHx8IHRoaXMuaGVhZC5xdWVyeVNlbGVjdG9yKGBzdHlsZVtpZD1cIiR7aWR9XCJdYCk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGNsZWFyQ1NTKGlkOiBzdHJpbmcpIHtcclxuICAgICAgICBjb25zdCBlbGVtZW50ID0gdGhpcy5nZXRFbGVtZW50KGlkKTtcclxuICAgICAgICBcclxuICAgICAgICBpZiAoZWxlbWVudCkgZWxlbWVudC5yZW1vdmUoKTtcclxuICAgICAgICBkZWxldGUgdGhpcy5lbGVtZW50c1tpZF07XHJcbiAgICB9XHJcbn0iXSwibmFtZXMiOlsiVXRpbGl0aWVzIiwiRE9NIiwiaGVhZCIsIm1lbW9pemUiLCJkb2N1bWVudCIsImFwcGVuZENoaWxkIiwiY3JlYXRlRWxlbWVudCIsInR5cGUiLCJvcHRpb25zIiwiY2hpbGRyZW4iLCJub2RlIiwiT2JqZWN0IiwiYXNzaWduIiwiYXBwZW5kIiwiaW5qZWN0Q1NTIiwiaWQiLCJjc3NPclVSTCIsImVsZW1lbnQiLCJ0ZXh0Q29udGVudCIsInJlbCIsImhyZWYiLCJkb2N1bWVudEhlYWQiLCJlbGVtZW50cyIsImluamVjdEpTIiwidXJsIiwiUHJvbWlzZSIsInJlc29sdmUiLCJyZWplY3QiLCJzY3JpcHQiLCJzcmMiLCJvbmxvYWQiLCJvbmVycm9yIiwiZ2V0RWxlbWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJjbGVhckNTUyIsInJlbW92ZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/renderer/modules/dom.ts\n");

/***/ }),

/***/ "./src/renderer/modules/index.ts":
/*!***************************************!*\
  !*** ./src/renderer/modules/index.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"DiscordModules\": () => (/* reexport safe */ _discord__WEBPACK_IMPORTED_MODULE_0__.DiscordModules),\n/* harmony export */   \"promise\": () => (/* reexport safe */ _discord__WEBPACK_IMPORTED_MODULE_0__.promise),\n/* harmony export */   \"Webpack\": () => (/* reexport safe */ _webpack__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   \"Injector\": () => (/* reexport safe */ _injector__WEBPACK_IMPORTED_MODULE_2__[\"default\"]),\n/* harmony export */   \"SettingsRenderer\": () => (/* reexport safe */ _settings__WEBPACK_IMPORTED_MODULE_3__[\"default\"]),\n/* harmony export */   \"Storage\": () => (/* reexport safe */ _storage__WEBPACK_IMPORTED_MODULE_4__[\"default\"]),\n/* harmony export */   \"Utilities\": () => (/* reexport safe */ _util__WEBPACK_IMPORTED_MODULE_5__[\"default\"]),\n/* harmony export */   \"DOM\": () => (/* reexport safe */ _dom__WEBPACK_IMPORTED_MODULE_6__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _discord__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./discord */ \"./src/renderer/modules/discord.ts\");\n/* harmony import */ var _webpack__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./webpack */ \"./src/renderer/modules/webpack.ts\");\n/* harmony import */ var _injector__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./injector */ \"./src/renderer/modules/injector.ts\");\n/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./settings */ \"./src/renderer/modules/settings.ts\");\n/* harmony import */ var _storage__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./storage */ \"./src/renderer/modules/storage.ts\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./util */ \"./src/renderer/modules/util.ts\");\n/* harmony import */ var _dom__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./dom */ \"./src/renderer/modules/dom.ts\");\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvbW9kdWxlcy9pbmRleC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBeUI7QUFDbUI7QUFDRTtBQUNRO0FBQ1Y7QUFDRDtBQUNQIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vaG9seW1vZC8uL3NyYy9yZW5kZXJlci9tb2R1bGVzL2luZGV4LnRzP2E0ZjciXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi4vZGlzY29yZFwiO1xyXG5leHBvcnQge2RlZmF1bHQgYXMgV2VicGFja30gZnJvbSBcIi4vd2VicGFja1wiO1xyXG5leHBvcnQge2RlZmF1bHQgYXMgSW5qZWN0b3J9IGZyb20gXCIuL2luamVjdG9yXCI7XHJcbmV4cG9ydCB7ZGVmYXVsdCBhcyBTZXR0aW5nc1JlbmRlcmVyfSBmcm9tIFwiLi9zZXR0aW5nc1wiO1xyXG5leHBvcnQge2RlZmF1bHQgYXMgU3RvcmFnZX0gZnJvbSBcIi4vc3RvcmFnZVwiO1xyXG5leHBvcnQge2RlZmF1bHQgYXMgVXRpbGl0aWVzfSBmcm9tIFwiLi91dGlsXCI7XHJcbmV4cG9ydCB7ZGVmYXVsdCBhcyBET019IGZyb20gXCIuL2RvbVwiOyJdLCJuYW1lcyI6WyJkZWZhdWx0IiwiV2VicGFjayIsIkluamVjdG9yIiwiU2V0dGluZ3NSZW5kZXJlciIsIlN0b3JhZ2UiLCJVdGlsaXRpZXMiLCJET00iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/renderer/modules/index.ts\n");

/***/ }),

/***/ "./src/renderer/modules/injector.ts":
/*!******************************************!*\
  !*** ./src/renderer/modules/injector.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"injections\": () => (/* binding */ injections),\n/* harmony export */   \"validateOptions\": () => (/* binding */ validateOptions),\n/* harmony export */   \"createInjection\": () => (/* binding */ createInjection),\n/* harmony export */   \"resolveInjection\": () => (/* binding */ resolveInjection),\n/* harmony export */   \"inject\": () => (/* binding */ inject),\n/* harmony export */   \"getInjectionsByCaller\": () => (/* binding */ getInjectionsByCaller),\n/* harmony export */   \"uninject\": () => (/* binding */ uninject),\n/* harmony export */   \"create\": () => (/* binding */ create),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _common_logger__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../common/logger */ \"./src/common/logger.ts\");\n\nconst Logger = new _common_logger__WEBPACK_IMPORTED_MODULE_0__[\"default\"](\"Injector\");\n/**@module Injector */ /**\r\n * @typedef InjectorOptions\r\n * @property {string} caller Caller for the injection, can be used multiple times.\r\n * @property {object|Function} module Module to inject into.\r\n * @property {string} method Method name to inject into, must be a property of {@property Module}\r\n */ /**\r\n * @typedef Injection\r\n * @property {object|function} module\r\n * @property {() => void} revert\r\n * @property {string} method\r\n * @property {function} originalMethod\r\n * @property {Array<InjectionChild>} children;\r\n */ /**\r\n * @typedef InjectionChild\r\n * @property {string} caller;\r\n * @property {(thisObject, params: any[], res) => any=} after;\r\n * @property {(thisObject, params: any[]) => any=} before;\r\n * @property {(types = [\"all\"]) => void} uninject;\r\n */ /**\r\n * All injections\r\n * @type {Array<Injection>}\r\n\r\n */ const injections = [];\n/**\r\n * Checks the arguments for the **inject** function.\r\n * @param {InjectorOptions} options \r\n * @returns {void}\r\n \r\n * @private Should only be used by the injector itself.\r\n */ function validateOptions(options) {\n    if (typeof options.caller !== \"string\") throw new Error(\"No caller for injection specified!\");\n    if (typeof options.module === \"undefined\") throw new Error(\"No module to injection specified!\");\n    if (typeof options.method === \"undefined\") throw new Error(\"No injection method specified!\");\n    if (typeof options.module[options.method] !== \"function\") throw new Error(`Method '${options.method}' appears to be '${typeof options.module[options.method]}' instead of 'function'!`);\n    if (Object.isFrozen(options.module)) throw new Error(\"Module appears to be readonly! Cannot injection into it.\");\n    if (![\n        \"before\",\n        \"after\"\n    ].some((opt)=>typeof options[opt] === \"function\"\n    )) throw new Error(\"No inject type specified!\");\n}\n/**\r\n * Injects into a module, pushes another inject into **{injections}**\r\n * @param {object|function} module The module to be injected\r\n * @param {string} method The name of any property in **{module}**\r\n * @returns {Injection}\r\n \r\n */ function createInjection(module, method) {\n    const originalMethod = module[method];\n    const injection = {\n        module,\n        method,\n        originalMethod: module[method],\n        children: [],\n        revert: ()=>{\n            const index = injections.indexOf(injection);\n            if (index < 0) return false;\n            module[method] = originalMethod;\n            injections.splice(index, 1);\n        }\n    };\n    module[method] = function(...params) {\n        if (!injection.children.length) {\n            injection.revert();\n            return originalMethod.apply(this, arguments);\n        }\n        const before = injection.children.filter((child)=>typeof child.before === \"function\" && !child.cancelBefore\n        );\n        const after = injection.children.filter((child)=>typeof child.after === \"function\" && !child.cancelAfter\n        );\n        let returnValue = params;\n        for (const injection2 of before){\n            try {\n                const tempReturn = injection2.before(this, returnValue);\n                if (Array.isArray(tempReturn)) returnValue = tempReturn;\n            } catch (exception) {\n                Logger.error(`Failed to run before injection for ${injection2.caller}:\\n`, exception);\n            }\n        }\n        if (Array.isArray(returnValue)) params = returnValue;\n        returnValue = originalMethod.apply(this, params);\n        for (const injection1 of after){\n            try {\n                const tempReturn = injection1.after(this, params, returnValue);\n                if (typeof tempReturn !== \"undefined\") returnValue = tempReturn;\n            } catch (exception) {\n                Logger.error(`Failed to run after injection for ${injection1.caller}:\\n`, exception);\n            }\n        }\n        return returnValue;\n    };\n    Object.assign(module[method], originalMethod, {\n        injection: {\n            uninject: injection.revert,\n            originalMethod\n        },\n        toString: ()=>originalMethod.toString()\n    });\n    injections.push(injection);\n    return injection;\n}\n/**\r\n * Resolves already existing injections / creates new injections.\r\n * @param {InjectorOptions} options Options provided for the injection process.\r\n * @returns {Injection}\r\n \r\n */ function resolveInjection(options) {\n    const { module , method  } = options;\n    let injection = injections.find((e)=>Object.is(e.module, module) && Object.is(e.method, method)\n    );\n    if (!injection) {\n        injection = createInjection(module, method);\n    }\n    return injection;\n}\n/**\r\n * Inject into any module that is the typeof Function|Object. \r\n * @param {InjectorOptions} options \r\n * @returns {void}\r\n \r\n * @example\r\n \r\n * ```js\r\n * import Injector from \"kernel/injector\";\r\n * import Logger from \"kernel/logger\";\r\n * \r\n * Injector.inject({\r\n *      caller: \"kernel-mod\",\r\n *      module: window.console,\r\n *      method: \"warn\",\r\n *      before: (thisObject, params, res) => {\r\n *          Logger.log(\"Patched message: \", params);\r\n *      }\r\n * });\r\n * ```\r\n */ function inject(options) {\n    validateOptions(options);\n    const injection = resolveInjection(options);\n    const child = {\n        ...options,\n        uninject: (types = [\n            \"all\"\n        ])=>{\n            const index = injection.children.indexOf(child);\n            if (index < 0) return false;\n            const foundChild = injection.children[index];\n            $loop: for (const type of types)switch(type){\n                case \"before\":\n                    foundChild.cancelBefore = true;\n                    continue $loop;\n                case \"after\":\n                    foundChild.cancelAfter = true;\n                    continue $loop;\n                case \"all\":\n                    injection.children.splice(index, 1);\n                    break $loop;\n            }\n            if (foundChild.cancelAfter && !foundChild.before || foundChild.cancelBefore && !foundChild.after) {\n                injection.children.splice(index, 1);\n            }\n        }\n    };\n    injection.children.push(child);\n    return child.uninject;\n}\n/**\r\n * Collects all injections by the **{caller}**\r\n * @param {string} caller Caller for injection to be resolved.\r\n * @returns {InjectionChild[]}\r\n \r\n */ function getInjectionsByCaller(caller) {\n    let found = [];\n    for (const injection of injections){\n        for (const child of injection.children){\n            if (Object.is(child.caller, caller)) found.push(child);\n        }\n    }\n    return found;\n}\n/**\r\n * Reverts the injection into a module by caller and method names.\r\n * @param {string} caller Caller for the injections. \r\n * @param {\"all\" | \"before\" | \"after\"} types Injection types.\r\n * @returns {boolean}\r\n \r\n */ function uninject(caller, types = [\n    \"all\"\n]) {\n    const injections1 = getInjectionsByCaller(caller);\n    if (!injections1.length) return false;\n    for (const child of injections1)child.uninject(types);\n    return true;\n}\n/**\r\n * Creates a injector specific for the choosen caller.\r\n * @param {string} caller Caller to for injections.\r\n */ function create(caller) {\n    if (typeof caller !== \"string\") throw new Error(`Caller must be a string, but got ${typeof caller} instead.`);\n    return {\n        inject: (options)=>inject(Object.assign({\n                caller\n            }, options))\n        ,\n        uninject: (types)=>uninject(caller, types)\n        ,\n        getInjectionsByCaller: ()=>getInjectionsByCaller(caller)\n    };\n}\nconst Injector = {\n    inject,\n    uninject,\n    validateOptions,\n    injections,\n    create,\n    getInjectionsByCaller\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Injector);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/renderer/modules/injector.ts\n");

/***/ }),

/***/ "./src/renderer/modules/register.ts":
/*!******************************************!*\
  !*** ./src/renderer/modules/register.ts ***!
  \******************************************/
/***/ (() => {

eval("Object.assign(window, {\n    HolyAPI: HolyNative.requireModule(\"API\"),\n    HolyIPC: HolyNative.requireModule(\"IPC\")\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob2x5bW9kLy4vc3JjL3JlbmRlcmVyL21vZHVsZXMvcmVnaXN0ZXIudHM/M2Y4OCJdLCJzb3VyY2VzQ29udGVudCI6WyJPYmplY3QuYXNzaWduKHdpbmRvdywge1xyXG4gICAgSG9seUFQSTogSG9seU5hdGl2ZS5yZXF1aXJlTW9kdWxlKFwiQVBJXCIpLFxyXG4gICAgSG9seUlQQzogSG9seU5hdGl2ZS5yZXF1aXJlTW9kdWxlKFwiSVBDXCIpXHJcbn0pOyJdLCJuYW1lcyI6WyJPYmplY3QiLCJhc3NpZ24iLCJ3aW5kb3ciLCJIb2x5QVBJIiwiSG9seU5hdGl2ZSIsInJlcXVpcmVNb2R1bGUiLCJIb2x5SVBDIl0sIm1hcHBpbmdzIjoiQUFBQUEsTUFBTSxDQUFDQyxNQUFNLENBQUNDLE1BQU0sRUFBRSxDQUFDO0lBQ25CQyxPQUFPLEVBQUVDLFVBQVUsQ0FBQ0MsYUFBYSxDQUFDLENBQUs7SUFDdkNDLE9BQU8sRUFBRUYsVUFBVSxDQUFDQyxhQUFhLENBQUMsQ0FBSztBQUMzQyxDQUFDIiwic291cmNlUm9vdCI6IiIsImZpbGUiOiIuL3NyYy9yZW5kZXJlci9tb2R1bGVzL3JlZ2lzdGVyLnRzLmpzIn0=\n//# sourceURL=webpack-internal:///./src/renderer/modules/register.ts\n");

/***/ }),

/***/ "./src/renderer/modules/settings.ts":
/*!******************************************!*\
  !*** ./src/renderer/modules/settings.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SettingsRenderer)\n/* harmony export */ });\n/* harmony import */ var _ui_components_settings__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ui/components/settings */ \"./src/renderer/ui/components/settings.tsx\");\n/* harmony import */ var _injector__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./injector */ \"./src/renderer/modules/injector.ts\");\n/* harmony import */ var _webpack__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./webpack */ \"./src/renderer/modules/webpack.ts\");\n\n\n\nclass SettingsRenderer {\n    static registerPanel(id, options) {\n        const { label , render , order  } = options;\n        const tab = this.panels.find((e)=>e.id === id\n        );\n        if (tab) throw new Error(`Settings tab ${id} is already registered!`);\n        const panel = {\n            section: `holy-${id}`,\n            label: label,\n            order: order,\n            className: `holy-settings-${id}-item`,\n            element: ()=>React.createElement(_ui_components_settings__WEBPACK_IMPORTED_MODULE_0__[\"default\"], {\n                    name: label,\n                    children: render\n                })\n        };\n        this.panels = this.panels.concat(panel).sort(this.sortPanels);\n        return ()=>{\n            const index = this.panels.indexOf(panel);\n            if (index < 0) return false;\n            this.panels.splice(index, 1);\n            return true;\n        };\n    }\n    static unregisterPanel(id) {\n        const panel = this.panels.findIndex((e)=>e.id === id\n        );\n        if (panel < 0) return;\n        this.panels.splice(panel, 1);\n    }\n    static sortPanels(a, b) {\n        return a.order - b.order;\n    }\n    static patchSettingsView() {\n        const SettingsView = _webpack__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findByDisplayName(\"SettingsView\");\n        _injector__WEBPACK_IMPORTED_MODULE_1__[\"default\"].inject({\n            caller: \"HolySettings\",\n            module: SettingsView.prototype,\n            method: \"getPredicateSections\",\n            after: (_, __, res)=>{\n                if (!Array.isArray(res) || !res.some((e)=>e?.section?.toLowerCase() === \"changelog\"\n                ) || res.some((s)=>s?.id === \"holy-settings\"\n                )) return;\n                const index = res.findIndex((s)=>s?.section?.toLowerCase() === \"changelog\"\n                ) - 1;\n                if (index < 0) return;\n                res.splice(index, 0, ...SettingsRenderer.defaultPanels.concat(SettingsRenderer.panels));\n            }\n        });\n    }\n}\nSettingsRenderer.defaultPanels = [\n    {\n        section: \"DIVIDER\"\n    },\n    {\n        section: \"HEADER\",\n        label: \"Holymod\"\n    }, \n];\nSettingsRenderer.panels = [];\n\n_webpack__WEBPACK_IMPORTED_MODULE_2__[\"default\"].whenReady.then(()=>SettingsRenderer.patchSettingsView()\n);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QkFFeEksS0FBSyxDQUFDcUIsS0FBSyxHQUFHa0IsR0FBRyxDQUFDZCxTQUFTLEVBQUNtQixDQUFDLEdBQUlBLENBQUMsRUFBRWpDLE9BQU8sRUFBRWdDLFdBQVcsT0FBTyxDQUFXO29CQUFJLENBQUM7Z0JBQy9FLEVBQUUsRUFBRXRCLEtBQUssR0FBRyxDQUFDLEVBQUUsTUFBTTtnQkFFckJrQixHQUFHLENBQUNoQixNQUFNLENBQUNGLEtBQUssRUFBRSxDQUFDLEtBQUt2QixnQkFBZ0IsQ0FBQytDLGFBQWEsQ0FBQzNCLE1BQU0sQ0FBQ3BCLGdCQUFnQixDQUFDUSxNQUFNO1lBQ3pGLENBQUM7UUFDTCxDQUFDO0lBQ0wsQ0FBQzs7QUFqRWdCUixnQkFBZ0IsQ0FDMUIrQyxhQUFhLEdBQUcsQ0FBQztJQUNwQixDQUFDbEM7UUFBQUEsT0FBTyxFQUFFLENBQVM7SUFBQSxDQUFDO0lBQ3BCLENBQUM7UUFDR0EsT0FBTyxFQUFFLENBQVE7UUFDakJULEtBQUssRUFBRSxDQUFTO0lBQ3BCLENBQUM7QUFDTCxDQUFDO0FBUGdCSixnQkFBZ0IsQ0FTMUJRLE1BQU0sR0FBVSxDQUFDLENBQUM7QUFUUTtBQW9FckNULCtEQUFzQixLQUFPQyxnQkFBZ0IsQ0FBQzhCLGlCQUFpQiIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbHltb2QvLi9zcmMvcmVuZGVyZXIvbW9kdWxlcy9zZXR0aW5ncy50cz83Y2E0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTZXR0aW5ncyBmcm9tIFwiQHVpL2NvbXBvbmVudHMvc2V0dGluZ3NcIjtcclxuaW1wb3J0IEluamVjdG9yIGZyb20gXCIuL2luamVjdG9yXCI7XHJcbmltcG9ydCBXZWJwYWNrIGZyb20gXCIuL3dlYnBhY2tcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNldHRpbmdzUmVuZGVyZXIge1xyXG4gICAgc3RhdGljIGRlZmF1bHRQYW5lbHMgPSBbXHJcbiAgICAgICAge3NlY3Rpb246IFwiRElWSURFUlwifSxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHNlY3Rpb246IFwiSEVBREVSXCIsXHJcbiAgICAgICAgICAgIGxhYmVsOiBcIkhvbHltb2RcIixcclxuICAgICAgICB9LFxyXG4gICAgXVxyXG5cclxuICAgIHN0YXRpYyBwYW5lbHM6IGFueVtdID0gW107XHJcblxyXG4gICAgc3RhdGljIHJlZ2lzdGVyUGFuZWwoaWQ6IHN0cmluZywgb3B0aW9uczoge2xhYmVsOiBzdHJpbmcsIHJlbmRlcjogKCkgPT4gaW1wb3J0KFwicmVhY3RcIikuUmVhY3RFbGVtZW50LCBoZWFkZXI/OiBpbXBvcnQoXCJyZWFjdFwiKS5SZWFjdEVsZW1lbnQsIG9yZGVyOiBudW1iZXJ9KSB7XHJcbiAgICAgICAgY29uc3Qge2xhYmVsLCByZW5kZXIsIG9yZGVyfSA9IG9wdGlvbnM7XHJcbiAgICAgICAgY29uc3QgdGFiID0gdGhpcy5wYW5lbHMuZmluZChlID0+IGUuaWQgPT09IGlkKVxyXG5cclxuICAgICAgICBpZiAodGFiKSB0aHJvdyBuZXcgRXJyb3IoYFNldHRpbmdzIHRhYiAke2lkfSBpcyBhbHJlYWR5IHJlZ2lzdGVyZWQhYCk7XHJcbiAgICAgICAgXHJcbiAgICAgICAgY29uc3QgcGFuZWwgPSB7XHJcbiAgICAgICAgICAgIHNlY3Rpb246IGBob2x5LSR7aWR9YCxcclxuICAgICAgICAgICAgbGFiZWw6IGxhYmVsLFxyXG4gICAgICAgICAgICBvcmRlcjogb3JkZXIsXHJcbiAgICAgICAgICAgIGNsYXNzTmFtZTogYGhvbHktc2V0dGluZ3MtJHtpZH0taXRlbWAsXHJcbiAgICAgICAgICAgIGVsZW1lbnQ6ICgpID0+IFJlYWN0LmNyZWF0ZUVsZW1lbnQoU2V0dGluZ3MsIHtcclxuICAgICAgICAgICAgICAgIG5hbWU6IGxhYmVsLFxyXG4gICAgICAgICAgICAgICAgY2hpbGRyZW46IHJlbmRlclxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIHRoaXMucGFuZWxzID0gdGhpcy5wYW5lbHMuY29uY2F0KHBhbmVsKS5zb3J0KHRoaXMuc29ydFBhbmVscyk7XHJcblxyXG4gICAgICAgIHJldHVybiAoKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gdGhpcy5wYW5lbHMuaW5kZXhPZihwYW5lbCk7XHJcbiAgICAgICAgICAgIGlmIChpbmRleCA8IDApIHJldHVybiBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5wYW5lbHMuc3BsaWNlKGluZGV4LCAxKTtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgdW5yZWdpc3RlclBhbmVsKGlkOiBzdHJpbmcpIHtcclxuICAgICAgICBjb25zdCBwYW5lbCA9IHRoaXMucGFuZWxzLmZpbmRJbmRleChlID0+IGUuaWQgPT09IGlkKTtcclxuICAgICAgICBpZiAocGFuZWwgPCAwKSByZXR1cm47XHJcblxyXG4gICAgICAgIHRoaXMucGFuZWxzLnNwbGljZShwYW5lbCwgMSk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIHNvcnRQYW5lbHMoYSwgYikge1xyXG4gICAgICAgIHJldHVybiBhLm9yZGVyIC0gYi5vcmRlcjtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgcGF0Y2hTZXR0aW5nc1ZpZXcoKSB7XHJcbiAgICAgICAgY29uc3QgU2V0dGluZ3NWaWV3ID0gV2VicGFjay5maW5kQnlEaXNwbGF5TmFtZShcIlNldHRpbmdzVmlld1wiKTtcclxuXHJcbiAgICAgICAgSW5qZWN0b3IuaW5qZWN0KHtcclxuICAgICAgICAgICAgY2FsbGVyOiBcIkhvbHlTZXR0aW5nc1wiLFxyXG4gICAgICAgICAgICBtb2R1bGU6IFNldHRpbmdzVmlldy5wcm90b3R5cGUsXHJcbiAgICAgICAgICAgIG1ldGhvZDogXCJnZXRQcmVkaWNhdGVTZWN0aW9uc1wiLFxyXG4gICAgICAgICAgICBhZnRlcjogKF8sIF9fLCByZXMpID0+IHtcclxuICAgICAgICAgICAgICAgIGlmICghQXJyYXkuaXNBcnJheShyZXMpIHx8ICFyZXMuc29tZShlID0+IGU/LnNlY3Rpb24/LnRvTG93ZXJDYXNlKCkgPT09IFwiY2hhbmdlbG9nXCIpIHx8IHJlcy5zb21lKHMgPT4gcz8uaWQgPT09IFwiaG9seS1zZXR0aW5nc1wiKSkgcmV0dXJuO1xyXG5cclxuICAgICAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gcmVzLmZpbmRJbmRleChzID0+IHM/LnNlY3Rpb24/LnRvTG93ZXJDYXNlKCkgPT09IFwiY2hhbmdlbG9nXCIpIC0gMTtcclxuICAgICAgICAgICAgICAgIGlmIChpbmRleCA8IDApIHJldHVybjtcclxuXHJcbiAgICAgICAgICAgICAgICByZXMuc3BsaWNlKGluZGV4LCAwLCAuLi5TZXR0aW5nc1JlbmRlcmVyLmRlZmF1bHRQYW5lbHMuY29uY2F0KFNldHRpbmdzUmVuZGVyZXIucGFuZWxzKSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxufVxyXG5cclxuV2VicGFjay53aGVuUmVhZHkudGhlbigoKSA9PiBTZXR0aW5nc1JlbmRlcmVyLnBhdGNoU2V0dGluZ3NWaWV3KCkpOyJdLCJuYW1lcyI6WyJTZXR0aW5ncyIsIkluamVjdG9yIiwiV2VicGFjayIsIlNldHRpbmdzUmVuZGVyZXIiLCJyZWdpc3RlclBhbmVsIiwiaWQiLCJvcHRpb25zIiwibGFiZWwiLCJyZW5kZXIiLCJvcmRlciIsInRhYiIsInBhbmVscyIsImZpbmQiLCJlIiwiRXJyb3IiLCJwYW5lbCIsInNlY3Rpb24iLCJjbGFzc05hbWUiLCJlbGVtZW50IiwiUmVhY3QiLCJjcmVhdGVFbGVtZW50IiwibmFtZSIsImNoaWxkcmVuIiwiY29uY2F0Iiwic29ydCIsInNvcnRQYW5lbHMiLCJpbmRleCIsImluZGV4T2YiLCJzcGxpY2UiLCJ1bnJlZ2lzdGVyUGFuZWwiLCJmaW5kSW5kZXgiLCJhIiwiYiIsInBhdGNoU2V0dGluZ3NWaWV3IiwiU2V0dGluZ3NWaWV3IiwiZmluZEJ5RGlzcGxheU5hbWUiLCJpbmplY3QiLCJjYWxsZXIiLCJtb2R1bGUiLCJwcm90b3R5cGUiLCJtZXRob2QiLCJhZnRlciIsIl8iLCJfXyIsInJlcyIsIkFycmF5IiwiaXNBcnJheSIsInNvbWUiLCJ0b0xvd2VyQ2FzZSIsInMiLCJkZWZhdWx0UGFuZWxzIiwid2hlblJlYWR5IiwidGhlbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/renderer/modules/settings.ts\n");

/***/ }),

/***/ "./src/renderer/modules/storage.ts":
/*!*****************************************!*\
  !*** ./src/renderer/modules/storage.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _classes_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @classes/store */ \"./src/renderer/classes/store.ts\");\n/* harmony import */ var _common_logger__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @common/logger */ \"./src/common/logger.ts\");\n/* harmony import */ var _discord__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./discord */ \"./src/renderer/modules/discord.ts\");\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./util */ \"./src/renderer/modules/util.ts\");\n\n\n\n\nconst Logger = new _common_logger__WEBPACK_IMPORTED_MODULE_1__[\"default\"](\"Storage\");\nconst { Path , FS  } = HolyAPI;\nconst Storage = new class Storage extends _classes_store__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    initialize() {\n        if (!FS.exists(this.folder)) {\n            Logger.log(\"config folder was not found, creating one...\");\n            try {\n                FS.createDirectory(this.folder);\n            } catch (error) {\n                Logger.error(\"Failed to create config folder:\", error);\n            }\n        }\n    }\n    get(name, def) {\n        const { Lodash  } = _discord__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n        if (this.cache.has(name)) return Lodash.merge({\n        }, name, def);\n        const filepath = Path.resolve(this.folder, name + \".json\");\n        if (!FS.exists(filepath)) return def;\n        const data = _util__WEBPACK_IMPORTED_MODULE_3__[\"default\"].loadJSON(filepath);\n        if (data instanceof Error) {\n            Logger.error(`Data for ${name} is corrupt!`, data);\n            FS.createFile(filepath, \"{}\");\n            return def;\n        }\n        const final = Lodash.merge({\n        }, data, def);\n        this.cache.set(name, final);\n        return final;\n    }\n    set(name, value, emit = true) {\n        this.cache.set(name, value);\n        const filepath = Path.resolve(this.folder, name + \".json\");\n        try {\n            FS.createFile(filepath, JSON.stringify(value, null, \"\\t\"));\n        } catch (error) {\n            Logger.error(`Could not save data for ${name}:`, error);\n        }\n        if (emit) this.emit(\"data-changed\", name, value);\n    }\n    getMisc(misc = \"\", def) {\n        const { Lodash  } = _discord__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n        return Lodash.get(this.get(\"misc\", def), misc) ?? def;\n    }\n    setMisc(misc = this.getMisc(\"\", {\n    }), prop, value) {\n        const { Lodash  } = _discord__WEBPACK_IMPORTED_MODULE_2__[\"default\"];\n        this.set(\"misc\", Lodash.set(misc, prop.split(\".\"), value));\n    }\n    constructor(...args){\n        super(...args);\n        this.cache = new Map();\n        this.folder = Path.resolve(Path.getBasePath(), \"config\");\n    }\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Storage);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEVBQUVpQixJQUFJLEVBQUUsSUFBSSxDQUFDQSxJQUFJLENBQUMsQ0FBYyxlQUFFZixJQUFJLEVBQUVjLEtBQUs7SUFDbkQsQ0FBQztJQUVESSxPQUFPLENBQUNDLElBQVksR0FBRyxDQUFFLEdBQUVsQixHQUFRLEVBQU8sQ0FBQztRQUN2QyxLQUFLLENBQUMsQ0FBQ0MsQ0FBQUEsTUFBTSxHQUFDLEdBQUdoQixnREFBYztRQUUvQixNQUFNLENBQUNnQixNQUFNLENBQUNILEdBQUcsQ0FBQyxJQUFJLENBQUNBLEdBQUcsQ0FBQyxDQUFNLE9BQUVFLEdBQUcsR0FBR2tCLElBQUksS0FBS2xCLEdBQUc7SUFDekQsQ0FBQztJQUVEbUIsT0FBTyxDQUFDRCxJQUFTLEdBQUcsSUFBSSxDQUFDRCxPQUFPLENBQUMsQ0FBRSxHQUFFLENBQUM7SUFBQSxDQUFDLEdBQUdHLElBQVksRUFBRVAsS0FBVSxFQUFFLENBQUM7UUFDakUsS0FBSyxDQUFDLENBQUNaLENBQUFBLE1BQU0sR0FBQyxHQUFHaEIsZ0RBQWM7UUFFL0IsSUFBSSxDQUFDMkIsR0FBRyxDQUFDLENBQU0sT0FBRVgsTUFBTSxDQUFDVyxHQUFHLENBQUNNLElBQUksRUFBRUUsSUFBSSxDQUFDQyxLQUFLLENBQUMsQ0FBRyxLQUFHUixLQUFLO0lBQzVELENBQUM7OztRQTVEZSxJQTZEbkIsQ0E1REdYLEtBQUssR0FBRyxHQUFHLENBQUNvQixHQUFHO1FBREMsSUE2RG5CLENBMURHNUIsTUFBTSxHQUFHTixJQUFJLENBQUNrQixPQUFPLENBQUNsQixJQUFJLENBQUNtQyxXQUFXLElBQUksQ0FBUTs7O0FBNER0RCxpRUFBZWhDLE9BQU8sRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbHltb2QvLi9zcmMvcmVuZGVyZXIvbW9kdWxlcy9zdG9yYWdlLnRzPzBmMDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFN0b3JlIGZyb20gXCJAY2xhc3Nlcy9zdG9yZVwiO1xyXG5pbXBvcnQgTG9nZ2VyTW9kdWxlIGZyb20gXCJAY29tbW9uL2xvZ2dlclwiO1xyXG5pbXBvcnQgRGlzY29yZE1vZHVsZXMgZnJvbSBcIi4vZGlzY29yZFwiO1xyXG5pbXBvcnQgVXRpbGl0aWVzIGZyb20gXCIuL3V0aWxcIjtcclxuXHJcbmNvbnN0IExvZ2dlciA9IG5ldyBMb2dnZXJNb2R1bGUoXCJTdG9yYWdlXCIpO1xyXG5jb25zdCB7UGF0aCwgRlN9ID0gSG9seUFQSTtcclxuXHJcbmNvbnN0IFN0b3JhZ2UgPSBuZXcgY2xhc3MgU3RvcmFnZSBleHRlbmRzIFN0b3JlIHtcclxuICAgIGNhY2hlID0gbmV3IE1hcCgpO1xyXG5cclxuICAgIGZvbGRlciA9IFBhdGgucmVzb2x2ZShQYXRoLmdldEJhc2VQYXRoKCksIFwiY29uZmlnXCIpO1xyXG5cclxuICAgIGluaXRpYWxpemUoKSB7XHJcbiAgICAgICAgaWYgKCFGUy5leGlzdHModGhpcy5mb2xkZXIpKSB7XHJcbiAgICAgICAgICAgIExvZ2dlci5sb2coXCJjb25maWcgZm9sZGVyIHdhcyBub3QgZm91bmQsIGNyZWF0aW5nIG9uZS4uLlwiKTtcclxuXHJcbiAgICAgICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgICAgICBGUy5jcmVhdGVEaXJlY3RvcnkodGhpcy5mb2xkZXIpO1xyXG4gICAgICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICAgICAgTG9nZ2VyLmVycm9yKFwiRmFpbGVkIHRvIGNyZWF0ZSBjb25maWcgZm9sZGVyOlwiLCBlcnJvcik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0KG5hbWU6IHN0cmluZywgZGVmPzogYW55KSB7XHJcbiAgICAgICAgY29uc3Qge0xvZGFzaH0gPSBEaXNjb3JkTW9kdWxlcztcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuY2FjaGUuaGFzKG5hbWUpKSByZXR1cm4gTG9kYXNoLm1lcmdlKHt9LCBuYW1lLCBkZWYpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbnN0IGZpbGVwYXRoID0gUGF0aC5yZXNvbHZlKHRoaXMuZm9sZGVyLCBuYW1lICsgXCIuanNvblwiKTtcclxuICAgICAgICBpZiAoIUZTLmV4aXN0cyhmaWxlcGF0aCkpIHJldHVybiBkZWY7XHJcblxyXG4gICAgICAgIGNvbnN0IGRhdGEgPSBVdGlsaXRpZXMubG9hZEpTT04oZmlsZXBhdGgpO1xyXG4gICAgICAgIGlmIChkYXRhIGluc3RhbmNlb2YgRXJyb3IpIHtcclxuICAgICAgICAgICAgTG9nZ2VyLmVycm9yKGBEYXRhIGZvciAke25hbWV9IGlzIGNvcnJ1cHQhYCwgZGF0YSk7XHJcbiAgICAgICAgICAgIEZTLmNyZWF0ZUZpbGUoZmlsZXBhdGgsIFwie31cIik7XHJcbiAgICAgICAgICAgIHJldHVybiBkZWY7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBmaW5hbCA9IExvZGFzaC5tZXJnZSh7fSwgZGF0YSwgZGVmKTtcclxuICAgICAgICB0aGlzLmNhY2hlLnNldChuYW1lLCBmaW5hbCk7XHJcbiAgICAgICAgcmV0dXJuIGZpbmFsO1xyXG4gICAgfVxyXG5cclxuICAgIHNldChuYW1lOiBzdHJpbmcsIHZhbHVlOiBhbnksIGVtaXQgPSB0cnVlKSB7XHJcbiAgICAgICAgdGhpcy5jYWNoZS5zZXQobmFtZSwgdmFsdWUpO1xyXG5cclxuICAgICAgICBjb25zdCBmaWxlcGF0aCA9IFBhdGgucmVzb2x2ZSh0aGlzLmZvbGRlciwgbmFtZSArIFwiLmpzb25cIik7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgRlMuY3JlYXRlRmlsZShmaWxlcGF0aCwgSlNPTi5zdHJpbmdpZnkodmFsdWUsIG51bGwsIFwiXFx0XCIpKTtcclxuICAgICAgICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgICAgICAgICBMb2dnZXIuZXJyb3IoYENvdWxkIG5vdCBzYXZlIGRhdGEgZm9yICR7bmFtZX06YCwgZXJyb3IpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGVtaXQpIHRoaXMuZW1pdChcImRhdGEtY2hhbmdlZFwiLCBuYW1lLCB2YWx1ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0TWlzYyhtaXNjOiBzdHJpbmcgPSBcIlwiLCBkZWY6IGFueSk6IGFueSB7XHJcbiAgICAgICAgY29uc3Qge0xvZGFzaH0gPSBEaXNjb3JkTW9kdWxlcztcclxuXHJcbiAgICAgICAgcmV0dXJuIExvZGFzaC5nZXQodGhpcy5nZXQoXCJtaXNjXCIsIGRlZiksIG1pc2MpID8/IGRlZjtcclxuICAgIH1cclxuXHJcbiAgICBzZXRNaXNjKG1pc2M6IGFueSA9IHRoaXMuZ2V0TWlzYyhcIlwiLCB7fSksIHByb3A6IHN0cmluZywgdmFsdWU6IGFueSkge1xyXG4gICAgICAgIGNvbnN0IHtMb2Rhc2h9ID0gRGlzY29yZE1vZHVsZXM7XHJcblxyXG4gICAgICAgIHRoaXMuc2V0KFwibWlzY1wiLCBMb2Rhc2guc2V0KG1pc2MsIHByb3Auc3BsaXQoXCIuXCIpLCB2YWx1ZSkpO1xyXG4gICAgfVxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBTdG9yYWdlOyJdLCJuYW1lcyI6WyJTdG9yZSIsIkxvZ2dlck1vZHVsZSIsIkRpc2NvcmRNb2R1bGVzIiwiVXRpbGl0aWVzIiwiTG9nZ2VyIiwiUGF0aCIsIkZTIiwiSG9seUFQSSIsIlN0b3JhZ2UiLCJpbml0aWFsaXplIiwiZXhpc3RzIiwiZm9sZGVyIiwibG9nIiwiY3JlYXRlRGlyZWN0b3J5IiwiZXJyb3IiLCJnZXQiLCJuYW1lIiwiZGVmIiwiTG9kYXNoIiwiY2FjaGUiLCJoYXMiLCJtZXJnZSIsImZpbGVwYXRoIiwicmVzb2x2ZSIsImRhdGEiLCJsb2FkSlNPTiIsIkVycm9yIiwiY3JlYXRlRmlsZSIsImZpbmFsIiwic2V0IiwidmFsdWUiLCJlbWl0IiwiSlNPTiIsInN0cmluZ2lmeSIsImdldE1pc2MiLCJtaXNjIiwic2V0TWlzYyIsInByb3AiLCJzcGxpdCIsIk1hcCIsImdldEJhc2VQYXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/renderer/modules/storage.ts\n");

/***/ }),

/***/ "./src/renderer/modules/util.ts":
/*!**************************************!*\
  !*** ./src/renderer/modules/util.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Utilities)\n/* harmony export */ });\nclass Utilities {\n    static loadJSON(file) {\n        try {\n            return JSON.parse(HolyAPI.FS.readFile(file, \"utf8\"));\n        } catch (error) {\n            return error;\n        }\n    }\n    static assign(object, ...properties) {\n        for(let i = 0; i < properties.length; i++){\n            const keys = Object.keys(properties[i]);\n            Object.defineProperties(object, Object.fromEntries(keys.map((key)=>[\n                    key,\n                    {\n                        value: properties[i][key],\n                        writeable: false,\n                        configurable: false\n                    }\n                ]\n            )));\n        }\n        return object;\n    }\n    static memoize(target, key, value) {\n        Object.defineProperty(target, key, {\n            value: value,\n            configurable: true\n        });\n        return value;\n    }\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvbW9kdWxlcy91dGlsLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7TUFBcUJBLFNBQVM7V0FDbkJDLFFBQVEsQ0FBQ0MsSUFBWSxFQUFFLENBQUM7UUFDM0IsR0FBRyxDQUFDLENBQUM7WUFDRCxNQUFNLENBQUNDLElBQUksQ0FBQ0MsS0FBSyxDQUFDQyxPQUFPLENBQUNDLEVBQUUsQ0FBQ0MsUUFBUSxDQUFDTCxJQUFJLEVBQUUsQ0FBTTtRQUN0RCxDQUFDLENBQUMsS0FBSyxFQUFFTSxLQUFLLEVBQUUsQ0FBQztZQUNiLE1BQU0sQ0FBQ0EsS0FBSztRQUNoQixDQUFDO0lBQ0wsQ0FBQztXQUVNQyxNQUFNLENBQUNDLE1BQVcsS0FBS0MsVUFBVSxFQUFTLENBQUM7UUFDOUMsR0FBRyxDQUFFLEdBQUcsQ0FBQ0MsQ0FBQyxHQUFHLENBQUMsRUFBRUEsQ0FBQyxHQUFHRCxVQUFVLENBQUNFLE1BQU0sRUFBRUQsQ0FBQyxHQUFJLENBQUM7WUFDekMsS0FBSyxDQUFDRSxJQUFJLEdBQUdDLE1BQU0sQ0FBQ0QsSUFBSSxDQUFDSCxVQUFVLENBQUNDLENBQUM7WUFFckNHLE1BQU0sQ0FBQ0MsZ0JBQWdCLENBQUNOLE1BQU0sRUFBRUssTUFBTSxDQUFDRSxXQUFXLENBQzlDSCxJQUFJLENBQUNJLEdBQUcsRUFBQ0MsR0FBRyxHQUFJLENBQUNBO29CQUFBQSxHQUFHO29CQUFFLENBQUNDO3dCQUFBQSxLQUFLLEVBQUVULFVBQVUsQ0FBQ0MsQ0FBQyxFQUFFTyxHQUFHO3dCQUFHRSxTQUFTLEVBQUUsS0FBSzt3QkFBRUMsWUFBWSxFQUFFLEtBQUs7b0JBQUEsQ0FBQztnQkFBQSxDQUFDOztRQUVqRyxDQUFDO1FBRUQsTUFBTSxDQUFDWixNQUFNO0lBQ2pCLENBQUM7V0FFTWEsT0FBTyxDQUFVQyxNQUFXLEVBQUVMLEdBQVcsRUFBRUMsS0FBUSxFQUFLLENBQUM7UUFDNURMLE1BQU0sQ0FBQ1UsY0FBYyxDQUFDRCxNQUFNLEVBQUVMLEdBQUcsRUFBRSxDQUFDO1lBQ2hDQyxLQUFLLEVBQUVBLEtBQUs7WUFDWkUsWUFBWSxFQUFFLElBQUk7UUFDdEIsQ0FBQztRQUVELE1BQU0sQ0FBQ0YsS0FBSztJQUNoQixDQUFDOztBQTVCeUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob2x5bW9kLy4vc3JjL3JlbmRlcmVyL21vZHVsZXMvdXRpbC50cz82NGRiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFV0aWxpdGllcyB7XHJcbiAgICBzdGF0aWMgbG9hZEpTT04oZmlsZTogc3RyaW5nKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2UoSG9seUFQSS5GUy5yZWFkRmlsZShmaWxlLCBcInV0ZjhcIikpO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBlcnJvcjtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzc2lnbihvYmplY3Q6IGFueSwgLi4ucHJvcGVydGllczogYW55W10pIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb3BlcnRpZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHByb3BlcnRpZXNbaV0pO1xyXG5cclxuICAgICAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnRpZXMob2JqZWN0LCBPYmplY3QuZnJvbUVudHJpZXMoXHJcbiAgICAgICAgICAgICAgICBrZXlzLm1hcChrZXkgPT4gW2tleSwge3ZhbHVlOiBwcm9wZXJ0aWVzW2ldW2tleV0sIHdyaXRlYWJsZTogZmFsc2UsIGNvbmZpZ3VyYWJsZTogZmFsc2V9XSlcclxuICAgICAgICAgICAgKSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gb2JqZWN0O1xyXG4gICAgfVxyXG5cclxuICAgIHN0YXRpYyBtZW1vaXplPFQgPSBhbnk+KHRhcmdldDogYW55LCBrZXk6IHN0cmluZywgdmFsdWU6IFQpOiBUIHtcclxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHtcclxuICAgICAgICAgICAgdmFsdWU6IHZhbHVlLFxyXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWVcclxuICAgICAgICB9KTtcclxuICAgIFxyXG4gICAgICAgIHJldHVybiB2YWx1ZTtcclxuICAgIH07XHJcbn0iXSwibmFtZXMiOlsiVXRpbGl0aWVzIiwibG9hZEpTT04iLCJmaWxlIiwiSlNPTiIsInBhcnNlIiwiSG9seUFQSSIsIkZTIiwicmVhZEZpbGUiLCJlcnJvciIsImFzc2lnbiIsIm9iamVjdCIsInByb3BlcnRpZXMiLCJpIiwibGVuZ3RoIiwia2V5cyIsIk9iamVjdCIsImRlZmluZVByb3BlcnRpZXMiLCJmcm9tRW50cmllcyIsIm1hcCIsImtleSIsInZhbHVlIiwid3JpdGVhYmxlIiwiY29uZmlndXJhYmxlIiwibWVtb2l6ZSIsInRhcmdldCIsImRlZmluZVByb3BlcnR5Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/renderer/modules/util.ts\n");

/***/ }),

/***/ "./src/renderer/modules/webpack.ts":
/*!*****************************************!*\
  !*** ./src/renderer/modules/webpack.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"Filters\": () => (/* binding */ Filters),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n// @ts-nocheck\nif (typeof Array.prototype.at !== \"function\") {\n    Array.prototype.at = function(index) {\n        return index < 0 ? this[this.length - Math.abs(index)] : this[index];\n    };\n}\nif (typeof setImmediate === \"undefined\") {\n    window.setImmediate = (callback)=>setTimeout(callback, 0)\n    ;\n}\nclass Filters {\n    static byProps(...props) {\n        return (module)=>props.every((prop)=>prop in module\n            )\n        ;\n    }\n    static byDisplayName(name, def = false) {\n        return (module)=>(def ? module = module.default : module) && typeof module === \"function\" && module.displayName === name\n        ;\n    }\n    static byTypeString(...strings) {\n        return (module)=>module.type && (module = module.type?.toString()) && strings.every((str)=>module.indexOf(str) > -1\n            )\n        ;\n    }\n}\nclass WebpackModule {\n    get Filters() {\n        return Filters;\n    }\n    get chunkName() {\n        return \"webpackChunkdiscord_app\";\n    }\n    get id() {\n        return \"holy-req\" + Math.random().toString().slice(2, 5);\n    }\n    async waitFor(filter, { retries =100 , all =false , forever =false , delay =50  } = {\n    }) {\n        for(let i = 0; i < retries || forever; i++){\n            const module = this.findModule(filter, {\n                all,\n                cache: false\n            });\n            if (module) return module;\n            await new Promise((res)=>setTimeout(res, delay)\n            );\n        }\n    }\n    parseOptions(args, filter = (thing)=>typeof thing === \"object\" && thing != null && !Array.isArray(thing)\n    ) {\n        return [\n            args,\n            filter(args.at(-1)) ? args.pop() : {\n            }\n        ];\n    }\n    request(cache = true) {\n        if (cache && this.cache) return this.cache;\n        let req = undefined;\n        if (Array.isArray(window[this.chunkName])) {\n            const chunk = [\n                [\n                    this.id\n                ],\n                {\n                },\n                (__nested_webpack_require_2006__)=>req = __nested_webpack_require_2006__\n            ];\n            webpackChunkdiscord_app.push(chunk);\n            webpackChunkdiscord_app.splice(webpackChunkdiscord_app.indexOf(chunk), 1);\n        }\n        if (!req) console.warn(\"[Webpack] Got empty cache.\");\n        if (cache) this.cache = req;\n        return req;\n    }\n    findModule(filter, { all =false , cache =true , force =false , default: defaultExports = false  } = {\n    }) {\n        if (typeof filter !== \"function\") return void 0;\n        const __nested_webpack_require_2526__ = this.request(cache);\n        const found = [];\n        let hasError = null;\n        if (!__nested_webpack_require_2526__) return;\n        const wrapFilter = function(module, index) {\n            try {\n                return filter(module, index);\n            } catch (error) {\n                hasError ??= error;\n                return false;\n            }\n        };\n        for(const id in __nested_webpack_require_2526__.c){\n            const module = __nested_webpack_require_2526__.c[id].exports;\n            if (!module || module === window) continue;\n            switch(typeof module){\n                case \"object\":\n                    {\n                        if (wrapFilter(module, id)) {\n                            if (!all) return module;\n                            found.push(module);\n                        }\n                        if (module.__esModule && module.default != null && wrapFilter(module.default, id)) {\n                            const exports = defaultExports ? module : module.default;\n                            if (!all) return exports;\n                            found.push(exports);\n                        }\n                        if (force && module.__esModule) for(const key in module){\n                            if (!module[key]) continue;\n                            if (wrapFilter(module[key], id)) {\n                                if (!all) return module[key];\n                                found.push(module[key]);\n                            }\n                        }\n                        break;\n                    }\n                case \"function\":\n                    {\n                        if (wrapFilter(module, id)) {\n                            if (!all) return module;\n                            found.push(module);\n                        }\n                        break;\n                    }\n            }\n        }\n        if (hasError) {\n            setImmediate(()=>{\n                console.warn(\"[Webpack] filter threw an error. This can cause lag spikes at the user's end. Please fix asap.\\n\\n\", hasError);\n            });\n        }\n        return all ? found : found[0];\n    }\n    findModules(filter) {\n        return this.findModule(filter, {\n            all: true\n        });\n    }\n    bulk(...options) {\n        const [filters, { wait =false , ...rest }] = this.parseOptions(options);\n        const found = new Array(filters.length);\n        const searchFunction = wait ? this.waitFor : this.findModule;\n        const wrappedFilters = filters.map((filter)=>{\n            if (Array.isArray(filter)) filter = Filters.byProps(...filter);\n            if (typeof filter === \"string\") filter = Filters.byDisplayName(filter);\n            return (m)=>{\n                try {\n                    return filter(m);\n                } catch (error) {\n                    return false;\n                }\n            };\n        });\n        const returnValue = searchFunction.call(this, (module)=>{\n            for(let i = 0; i < wrappedFilters.length; i++){\n                const filter = wrappedFilters[i];\n                if (typeof filter !== \"function\" || !filter(module) || found[i] != null) continue;\n                found[i] = module;\n            }\n            return found.filter(String).length === filters.length;\n        }, rest);\n        if (wait) return returnValue.then(()=>found\n        );\n        return found;\n    }\n    findByProps(...options) {\n        const [props, { bulk =false , wait =false , ...rest }] = this.parseOptions(options);\n        if (!bulk && !wait) {\n            return this.findModule(Filters.byProps(...props), rest);\n        }\n        if (wait && !bulk) {\n            return this.waitFor(Filters.byProps(...props), rest);\n        }\n        if (bulk) {\n            const filters = props.map((propsArray)=>Filters.byProps(...propsArray)\n            ).concat({\n                wait,\n                ...rest\n            });\n            return this.bulk(...filters);\n        }\n        return null;\n    }\n    findByDisplayName(...options) {\n        const [displayNames, { bulk =false , wait =false , ...rest }] = this.parseOptions(options);\n        if (!bulk && !wait) {\n            return this.findModule(Filters.byDisplayName(displayNames[0]), rest);\n        }\n        if (wait && !bulk) {\n            return this.waitFor(Filters.byDisplayName(displayNames[0]), rest);\n        }\n        if (bulk) {\n            const filters = displayNames.map(filters.map(Filters.byDisplayName)).concat({\n                wait,\n                cache\n            });\n            return this.bulk(...filters);\n        }\n        return null;\n    }\n    findIndex(filter) {\n        let foundIndex = -1;\n        this.findModule((module, index)=>{\n            if (filter(module)) foundIndex = index;\n        });\n        return foundIndex;\n    }\n    atIndex(index) {\n        return this.request(true)?.c[index];\n    }\n    get waitForGlobal() {\n        return new Promise(async (onExists)=>{\n            while(!Array.isArray(window[this.chunkName])){\n                await new Promise(setImmediate);\n            }\n            onExists();\n        });\n    }\n    /**@deprecated Use Webpack.whenReady.then(() => {}) instead. */ async wait(callback = null) {\n        return this.whenReady.then(()=>{\n            typeof callback === \"function\" && callback();\n        });\n    }\n    /**@deprecated Use Webpack.whenReady.then(() => {}) instead. */ get whenExists() {\n        return this.waitForGlobal;\n    }\n    /**@deprecated Use Webpack.whenReady.then(() => {}) instead. */ on(event, listener) {\n        switch(event){\n            case \"LOADED\":\n                return this.whenReady.then(listener);\n        }\n    }\n    /**@deprecated @see Webpack.on */ get once() {\n        return this.on;\n    }\n    constructor(){\n        this.cache = null;\n        this.whenReady = this.waitForGlobal.then(()=>new Promise(async (onReady)=>{\n                const [Dispatcher, { ActionTypes  } = {\n                }] = await this.findByProps([\n                    \"dirtyDispatch\"\n                ], [\n                    \"API_HOST\",\n                    \"ActionTypes\"\n                ], {\n                    cache: false,\n                    bulk: true,\n                    wait: true,\n                    forever: true\n                });\n                const listener = function() {\n                    Dispatcher.unsubscribe(ActionTypes.START_SESSION, listener);\n                    onReady();\n                };\n                Dispatcher.subscribe(ActionTypes.START_SESSION, listener);\n            })\n        );\n        window.HolyWebpack = this;\n    }\n}\nconst Webpack = new WebpackModule;\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Webpack);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/renderer/modules/webpack.ts\n");

/***/ }),

/***/ "./src/renderer/node/module.ts":
/*!*************************************!*\
  !*** ./src/renderer/node/module.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cache\": () => (/* binding */ cache),\n/* harmony export */   \"nodeGlobals\": () => (/* binding */ nodeGlobals),\n/* harmony export */   \"globalPaths\": () => (/* binding */ globalPaths),\n/* harmony export */   \"createBindings\": () => (/* binding */ createBindings),\n/* harmony export */   \"extensions\": () => (/* binding */ extensions),\n/* harmony export */   \"Module\": () => (/* binding */ Module),\n/* harmony export */   \"resolve\": () => (/* binding */ resolve),\n/* harmony export */   \"createRequire\": () => (/* binding */ createRequire),\n/* harmony export */   \"getExtension\": () => (/* binding */ getExtension),\n/* harmony export */   \"resolveMain\": () => (/* binding */ resolveMain),\n/* harmony export */   \"getFilePath\": () => (/* binding */ getFilePath),\n/* harmony export */   \"load\": () => (/* binding */ load),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\nconst { Path , FS , Compilers  } = HolyAPI;\nconst cache = {\n};\nconst nodeGlobals = [\n    \"require\",\n    \"module\",\n    \"exports\",\n    \"__filename\",\n    \"__dirname\",\n    \"global\"\n].join(\", \");\nconst globalPaths = [\n    Path.resolve(Path.getBasePath(), \"node_modules\")\n];\nconst createBindings = function(extensions1, handler) {\n    return Object.fromEntries(extensions1.map((ext)=>[\n            ext,\n            handler\n        ]\n    ));\n};\nconst extensions = {\n    ...createBindings([\n        \".js\",\n        \".jsx\",\n        \".mjs\"\n    ], (module, filename)=>{\n        const fileContent = Compilers.compileJS(filename);\n        module._compile(fileContent);\n        return module.exports;\n    }),\n    ...createBindings([\n        \".ts\",\n        \".tsx\"\n    ], (module, filename)=>{\n        const filecontent = Compilers.compileTS(filename);\n        module._compile(filecontent);\n        return module.exports;\n    }),\n    \".json\": (module, filename)=>{\n        const filecontent = FS.readFile(filename, \"utf8\");\n        module.exports = JSON.parse(filecontent);\n        return module.exports;\n    },\n    \".scss\": (module, filename)=>{\n        const content = Compilers.compileSCSS(filename);\n        module.exports = content;\n        return content;\n    },\n    \".css\": (module, filename)=>{\n        const content = FS.readFile(filename, \"utf8\");\n        module.exports = content;\n        return module.exports;\n    },\n    // I haven't tested this - I assume it works.\n    // TODO: Make this not shitty\n    \".node\": (module, filename)=>{\n        const thing = HolyAPI.unsafeExecuteJS(`require(${JSON.stringify(filename)})`);\n        module.exports = thing;\n        return thing;\n    }\n};\nclass Module {\n    _compile(code) {\n        const wrapped = window.eval(`(function (${nodeGlobals}) {\n            ${code}\n            //# sourceURL=${JSON.stringify(this.filename).slice(1, -1)}\n        })`);\n        wrapped(this.require, this, this.exports, this.filename, this.path, window);\n    }\n    constructor(id, parent){\n        this.id = id;\n        this.path = Path.dirname(id);\n        this.exports = {\n        };\n        this.parent = parent;\n        this.filename = id;\n        this.loaded = false;\n        this.children = [];\n        if (parent) parent.children.push(this);\n    }\n}\nfunction resolve(path) {\n    for(const key in cache){\n        if (key.startsWith(path)) return key;\n    }\n}\nfunction createRequire(_path, parent) {\n    const require = (mod)=>{\n        if (typeof mod !== \"string\") return;\n        switch(mod){\n            case \"@Holy\":\n                return window.HolyAPI;\n            default:\n                {\n                    if (mod.startsWith(\"@Holy/\")) {\n                        const value1 = mod.split(\"/\").slice(1).reduce((value, key)=>value[key]\n                        , window.HolyAPI);\n                        if (value1) return value1;\n                    }\n                    return load(_path, mod, parent);\n                }\n        }\n    };\n    Object.assign(require, {\n        cache,\n        resolve\n    });\n    // @ts-ignore\n    return require;\n}\nfunction hasExtension(mod) {\n    return Boolean(extensions[Path.extname(mod)]);\n}\nfunction getExtension(mod) {\n    return Path.extname(mod) || Object.keys(extensions).find((ext)=>FS.exists(mod + ext)\n    ) || \"\";\n}\nfunction collectPNPMStores(node_modules) {\n    const store = Path.resolve(node_modules, \".pnpm\");\n    if (!FS.exists(store) || !FS.getStats(store).isDirectory()) return [];\n    const result = [];\n    for (const file of FS.readDirectory(store)){\n        const fullPath = Path.resolve(store, file, \"node_modules\");\n        if (FS.exists(fullPath)) result.push(fullPath);\n    }\n    return result;\n}\nfunction resolveGlobalPath(mod, globalPaths1) {\n    const directMatch = globalPaths1.find((globalPath)=>FS.exists(Path.resolve(globalPath, mod))\n    );\n    if (directMatch) return directMatch;\n    const withExtension = globalPaths1.find((globalPath)=>getExtension(Path.resolve(globalPath, mod))\n    );\n    if (withExtension) return withExtension;\n    return \"\";\n}\nfunction getGlobalPath(mod) {\n    const fromGlobals = resolveGlobalPath(mod, globalPaths);\n    if (fromGlobals) return fromGlobals;\n    const allPaths = globalPaths.flatMap((globalPath)=>collectPNPMStores(globalPath)\n    );\n    const fromPNPM = resolveGlobalPath(mod, allPaths);\n    if (fromPNPM) return fromPNPM;\n    return \"\";\n}\nfunction getParent(_path, mod) {\n    const concatPath = Path.resolve(_path, mod);\n    const globalPath = Path.resolve(getGlobalPath(mod), mod);\n    if (FS.exists(concatPath)) return concatPath;\n    if (FS.exists(globalPath)) return globalPath;\n    return \"\";\n}\nfunction resolveMain(_path, mod) {\n    const parent = hasExtension(_path) ? Path.dirname(_path) : getParent(_path, mod);\n    if (!FS.exists(parent)) throw new Error(`Cannot find module ${mod}\\ntree:\\n\\r-${_path}`);\n    const files = FS.readDirectory(parent);\n    for (const file of files){\n        const ext = Path.extname(file);\n        if (file === \"package.json\") {\n            const pkg = JSON.parse(FS.readFile(Path.resolve(parent, file), \"utf8\"));\n            if (!Reflect.has(pkg, \"main\")) continue;\n            return Path.resolve(parent, hasExtension(pkg.main) ? pkg.main : pkg.main + getExtension(Path.resolve(parent, pkg.main)));\n        }\n        if (file.slice(0, -ext.length) === \"index\" && extensions[ext]) return Path.resolve(parent, file);\n    }\n    if (mod.startsWith(\"./\")) return null;\n    const globalMod = globalPaths.find((pth)=>FS.exists(Path.resolve(pth, mod))\n    );\n    if (globalMod) return resolveMain(globalMod, mod);\n    return globalPaths.find((pth)=>getExtension(Path.resolve(pth, mod))\n    );\n}\nfunction getFilePath(_path, mod) {\n    const combined = Path.resolve(_path, mod);\n    const pth = hasExtension(combined) ? combined : combined + getExtension(combined);\n    if (FS.exists(pth) && FS.getStats(pth).isFile()) return pth;\n    if (!hasExtension(mod)) return resolveMain(_path, mod);\n    return mod;\n}\nfunction load(_path, mod, req = null) {\n    const file = getFilePath(_path, mod);\n    if (!FS.exists(file)) throw new Error(`Cannot find module ${mod}\\ntree:\\n\\r-${_path}`);\n    if (cache[file]) return cache[file].exports;\n    const stats = FS.getStats(file);\n    if (stats.isDirectory()) mod = resolveMain(_path, mod);\n    const ext = getExtension(file);\n    const loader = extensions[ext];\n    if (!loader) throw new Error(`Cannot find module ${file}`);\n    const module = cache[file] = new Module(file, req);\n    const require = createRequire(Path.dirname(file), module);\n    module.require = require;\n    loader(module, file);\n    return module.exports;\n}\n// TODO: Add globalPaths support\nconst NodeModule = {\n    _extensions: extensions,\n    cache,\n    _load: load,\n    globalPaths: globalPaths\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (NodeModule);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/renderer/node/module.ts\n");

/***/ }),

/***/ "./src/renderer/node/require.ts":
/*!**************************************!*\
  !*** ./src/renderer/node/require.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./module */ \"./src/renderer/node/module.ts\");\n\nconst Require = (0,_module__WEBPACK_IMPORTED_MODULE_0__.createRequire)(HolyAPI.Path.resolve(HolyAPI.Path.getBasePath(), \"plugins\"), null);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Require);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvbm9kZS9yZXF1aXJlLnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQXNDO0FBRXRDLEtBQUssQ0FBQ0MsT0FBTyxHQUFHRCxzREFBYSxDQUFDRSxPQUFPLENBQUNDLElBQUksQ0FBQ0MsT0FBTyxDQUFDRixPQUFPLENBQUNDLElBQUksQ0FBQ0UsV0FBVyxJQUFJLENBQVMsV0FBRyxJQUFJO0FBRS9GLGlFQUFlSixPQUFPLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob2x5bW9kLy4vc3JjL3JlbmRlcmVyL25vZGUvcmVxdWlyZS50cz8yNDI1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Y3JlYXRlUmVxdWlyZX0gZnJvbSBcIi4vbW9kdWxlXCI7XHJcblxyXG5jb25zdCBSZXF1aXJlID0gY3JlYXRlUmVxdWlyZShIb2x5QVBJLlBhdGgucmVzb2x2ZShIb2x5QVBJLlBhdGguZ2V0QmFzZVBhdGgoKSwgXCJwbHVnaW5zXCIpLCBudWxsKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IFJlcXVpcmU7Il0sIm5hbWVzIjpbImNyZWF0ZVJlcXVpcmUiLCJSZXF1aXJlIiwiSG9seUFQSSIsIlBhdGgiLCJyZXNvbHZlIiwiZ2V0QmFzZVBhdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/renderer/node/require.ts\n");

/***/ }),

/***/ "./src/renderer/ui/addons/card.tsx":
/*!*****************************************!*\
  !*** ./src/renderer/ui/addons/card.tsx ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"ToolButton\": () => (/* binding */ ToolButton),\n/* harmony export */   \"ButtonWrapper\": () => (/* binding */ ButtonWrapper),\n/* harmony export */   \"default\": () => (/* binding */ AddonCard)\n/* harmony export */ });\n/* harmony import */ var _modules_discord__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @modules/discord */ \"./src/renderer/modules/discord.ts\");\n/* harmony import */ var _ui_components_discordicon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ui/components/discordicon */ \"./src/renderer/ui/components/discordicon.tsx\");\n/* harmony import */ var _components_settings__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/settings */ \"./src/renderer/ui/components/settings.tsx\");\n/* harmony import */ var _card_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./card.scss */ \"./src/renderer/ui/addons/card.scss\");\n\n\n\n\nfunction _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction ToolButton({ label , icon , onClick , danger =false , disabled =false  }) {\n    const { Button , Tooltips: { Tooltip  }  } = _modules_discord__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n    return(/*#__PURE__*/ React.createElement(Tooltip, {\n        text: label,\n        position: \"top\"\n    }, (props)=>/*#__PURE__*/ React.createElement(Button, _extends({\n        }, props, {\n            className: \"holy-card-toolbutton\",\n            innerClassName: \"holy-card-toolbutton-inner\",\n            look: Button.Looks.BLANK,\n            size: Button.Sizes.NONE,\n            onClick: onClick,\n            disabled: disabled\n        }), /*#__PURE__*/ React.createElement(_ui_components_discordicon__WEBPACK_IMPORTED_MODULE_1__[\"default\"], {\n            name: icon,\n            color: danger ? \"#ed4245\" : void 0,\n            width: \"24\",\n            height: \"24\"\n        }))\n    ));\n}\nfunction ButtonWrapper({ value , onChange , disabled =false  }) {\n    const { Switch  } = _modules_discord__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n    const [isChecked, setChecked] = React.useState(value);\n    return(/*#__PURE__*/ React.createElement(Switch, {\n        className: \"holy-addons-switch\",\n        checked: isChecked,\n        disabled: disabled,\n        onChange: ()=>{\n            onChange(!isChecked);\n            setChecked(!isChecked);\n        }\n    }));\n}\n// function getPanel(id) {\n//     const get = settings.get(id);\n//     if (get) return get;\n//     for(const [key, options] of settings.entries()) {\n//         if (options.category == id) return settings.get(key);\n//     }\n//     return null;\n// }\nfunction AddonCard({ addon , manager , toggle , isEnabled  }) {\n    const { Markdown  } = _modules_discord__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n    const [, forceUpdate] = React.useReducer((n)=>n + 1\n    , 0);\n    const SettingsApi = React.useContext(_components_settings__WEBPACK_IMPORTED_MODULE_2__.SettingsContext);\n    React.useEffect(()=>{\n        manager.on(\"toggle\", (name)=>{\n            if (name !== addon.entityID) return;\n            forceUpdate();\n        });\n    }, [\n        addon,\n        manager\n    ]);\n    return(/*#__PURE__*/ React.createElement(\"div\", {\n        style: {\n            \"--plugin-color\": addon.color\n        },\n        className: \"holy-card-container \" + addon.manifest.name?.replace(/ /g, \"-\")\n    }, /*#__PURE__*/ React.createElement(\"div\", {\n        className: \"holy-card-header\"\n    }, /*#__PURE__*/ React.createElement(\"div\", {\n        className: \"holy-card-field holy-card-name\"\n    }, addon.manifest.name), \"version\" in addon.manifest && /*#__PURE__*/ React.createElement(\"div\", {\n        className: \"holy-card-field\"\n    }, \"v\", addon.manifest.version), \"author\" in addon.manifest && /*#__PURE__*/ React.createElement(\"div\", {\n        className: \"holy-card-field\"\n    }, \" by \", addon.manifest.author), /*#__PURE__*/ React.createElement(\"div\", {\n        className: \"holy-card-controls\"\n    }, /*#__PURE__*/ React.createElement(ToolButton, {\n        label: \"Reload\",\n        icon: \"Replay\",\n        disabled: !manager.isEnabled?.(addon) ?? true,\n        onClick: ()=>manager.reload(addon)\n    }), /*#__PURE__*/ React.createElement(ToolButton, {\n        label: \"Open Path\",\n        icon: \"Folder\",\n        onClick: ()=>{\n        // PCCompatNative.executeJS(`require(\"electron\").shell.showItemInFolder(${JSON.stringify(addon.path)})`);\n        }\n    }), /*#__PURE__*/ React.createElement(ToolButton, {\n        label: \"Delete\",\n        icon: \"Trash\",\n        onClick: ()=>{\n        // Modals.showConfirmationModal(\"Are you sure?\", `Are you sure that you want to delete the ${type} \"${addon.manifest.name}\"?`, {\n        //     danger: true,\n        //     onConfirm: () => {\n        //         manager.delete(addon.entityID)\n        //     }\n        // });\n        }\n    }), /*#__PURE__*/ React.createElement(ButtonWrapper, {\n        value: isEnabled?.(addon) ?? false,\n        onChange: ()=>{\n            toggle(addon);\n        }\n    }))), addon.manifest.description && /*#__PURE__*/ React.createElement(\"div\", {\n        className: \"holy-card-description\"\n    }, /*#__PURE__*/ React.createElement(Markdown, null, addon.manifest.description))));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/renderer/ui/addons/card.tsx\n");

/***/ }),

/***/ "./src/renderer/ui/addons/panel.tsx":
/*!******************************************!*\
  !*** ./src/renderer/ui/addons/panel.tsx ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"sortAddons\": () => (/* binding */ sortAddons),\n/* harmony export */   \"getSettings\": () => (/* binding */ getSettings),\n/* harmony export */   \"OverflowContextMenu\": () => (/* binding */ OverflowContextMenu),\n/* harmony export */   \"default\": () => (/* binding */ AddonPanel)\n/* harmony export */ });\n/* harmony import */ var _modules_discord__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @modules/discord */ \"./src/renderer/modules/discord.ts\");\n/* harmony import */ var _modules_storage__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @modules/storage */ \"./src/renderer/modules/storage.ts\");\n/* harmony import */ var _ui_components_discordicon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ui/components/discordicon */ \"./src/renderer/ui/components/discordicon.tsx\");\n/* harmony import */ var _card__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./card */ \"./src/renderer/ui/addons/card.tsx\");\n/* harmony import */ var _panel_scss__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./panel.scss */ \"./src/renderer/ui/addons/panel.scss\");\n\n\n\n\n\nfunction _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nconst sortLabels = [\n    \"name\",\n    \"author\",\n    \"version\",\n    \"description\",\n    \"added\"\n];\nconst searchLabels = [\n    \"name\",\n    \"author\",\n    \"description\"\n];\nconst orderLabels = [\n    \"ascending\",\n    \"descending\"\n];\nasync function sortAddons(addons, order, query, searchOptions, sortBy) {\n    return addons.filter((addon)=>{\n        if (!query) return true;\n        const { manifest  } = addon;\n        // Use String() wrapper for clever escaping\n        return [\n            \"name\",\n            \"author\",\n            \"description\"\n        ].some((type)=>searchOptions[type] && String(manifest[type] ?? \"\").toLowerCase().includes(query.toLowerCase())\n        );\n    }).sort((a, b)=>{\n        const first = a.manifest[sortBy] ?? \"\";\n        const second = b.manifest[sortBy] ?? \"\";\n        if (typeof first === \"string\") return String(first).toLowerCase().localeCompare(String(second).toLowerCase());\n        if (first > second) return 1;\n        if (second > first) return -1;\n        return 0;\n    })[order === \"ascending\" ? \"reverse\" : \"slice\"](0);\n}\nfunction getSettings() {\n}\nfunction OverflowContextMenu({ type: addonType  }) {\n    const { ContextMenu  } = _modules_discord__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n    const [sortBy, searchOptions, order] = _modules_storage__WEBPACK_IMPORTED_MODULE_1__[\"default\"].useEvent(\"data-changed\", ()=>[\n            _modules_storage__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getMisc(`${addonType}.sortBy`, \"name\"),\n            _modules_storage__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getMisc(`${addonType}.searchOption`, {\n                author: true,\n                name: true,\n                description: true\n            }),\n            _modules_storage__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getMisc(`${addonType}.order`, \"descending\")\n        ]\n    );\n    return(/*#__PURE__*/ React.createElement(ContextMenu.Menu, {\n        navId: \"OverflowContextMenu\"\n    }, /*#__PURE__*/ React.createElement(ContextMenu.ControlItem, {\n        id: \"order-header\",\n        control: ()=>/*#__PURE__*/ React.createElement(\"h5\", {\n                className: \"holy-settings-overflow-header\"\n            }, \"Order\")\n    }), /*#__PURE__*/ React.createElement(ContextMenu.Separator, {\n        key: \"separator\"\n    }), /*#__PURE__*/ React.createElement(ContextMenu.Group, null, orderLabels.map((type)=>/*#__PURE__*/ React.createElement(ContextMenu.RadioItem, {\n            key: \"order-\" + type,\n            label: type[0].toUpperCase() + type.slice(1),\n            checked: order === type,\n            id: \"sortBy-\" + type,\n            action: ()=>{\n                _modules_storage__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setMisc(void 0, `${addonType}.order`, type);\n            }\n        })\n    )), /*#__PURE__*/ React.createElement(ContextMenu.Separator, {\n        key: \"separator\"\n    }), /*#__PURE__*/ React.createElement(ContextMenu.ControlItem, {\n        id: \"sort-header\",\n        control: ()=>/*#__PURE__*/ React.createElement(\"h5\", {\n                className: \"holy-settings-overflow-header\"\n            }, \"Sort Options\")\n    }), /*#__PURE__*/ React.createElement(ContextMenu.Separator, {\n        key: \"separator\"\n    }), /*#__PURE__*/ React.createElement(ContextMenu.Group, null, sortLabels.map((type)=>/*#__PURE__*/ React.createElement(ContextMenu.RadioItem, {\n            key: \"sortBy-\" + type,\n            label: type[0].toUpperCase() + type.slice(1),\n            checked: sortBy === type,\n            id: \"sortBy-\" + type,\n            action: ()=>{\n                _modules_storage__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setMisc(void 0, `${addonType}.sortBy`, type);\n            }\n        })\n    )), /*#__PURE__*/ React.createElement(ContextMenu.Separator, {\n        key: \"separator\"\n    }), /*#__PURE__*/ React.createElement(ContextMenu.ControlItem, {\n        id: \"search-header\",\n        control: ()=>/*#__PURE__*/ React.createElement(\"h5\", {\n                className: \"holy-settings-overflow-header\"\n            }, \"Search Options\")\n    }), /*#__PURE__*/ React.createElement(ContextMenu.Separator, {\n        key: \"separator\"\n    }), /*#__PURE__*/ React.createElement(ContextMenu.Group, null, searchLabels.map((type)=>/*#__PURE__*/ React.createElement(ContextMenu.CheckboxItem, {\n            key: \"search-\" + type,\n            id: \"search-\" + type,\n            label: type[0].toUpperCase() + type.slice(1),\n            checked: searchOptions[type],\n            action: ()=>{\n                _modules_storage__WEBPACK_IMPORTED_MODULE_1__[\"default\"].setMisc(void 0, `${addonType}.searchOption.${type}`, !searchOptions[type]);\n            }\n        })\n    ))));\n}\nfunction AddonPanel({ addons: ManagerAddons , isEnabled , toggle , type , manager  }) {\n    const { React: React1 , Button , ContextMenu , Tooltips , SearchBar , PlaceholderClasses , LocaleManager  } = _modules_discord__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n    const [query, setQuery] = React1.useState(\"\");\n    const [addons1, setAddons] = React1.useState(null);\n    const [sortBy, searchOptions, order] = _modules_storage__WEBPACK_IMPORTED_MODULE_1__[\"default\"].useEvent(\"data-updated\", ()=>[\n            _modules_storage__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getMisc(`${type}.sortBy`, \"name\"),\n            _modules_storage__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getMisc(`${type}.searchOption`, {\n                author: true,\n                name: true,\n                description: true\n            }),\n            _modules_storage__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getMisc(`${type}.order`, \"descending\")\n        ]\n    );\n    React1.useEffect(()=>{\n        manager.on(\"delete\", ()=>{\n            setAddons(manager.addons);\n        });\n    }, [\n        manager\n    ]);\n    React1.useEffect(()=>{\n        sortAddons(Array.from(ManagerAddons.values()), order, query, searchOptions, sortBy).then((addons)=>setAddons(addons)\n        );\n    }, [\n        query,\n        manager,\n        type,\n        order,\n        searchOptions,\n        sortBy\n    ]);\n    return(/*#__PURE__*/ React.createElement(\"div\", {\n        className: \"holy-settings-addons\"\n    }, /*#__PURE__*/ React.createElement(\"div\", {\n        className: \"holy-settings-addons-controls\"\n    }, /*#__PURE__*/ React.createElement(SearchBar, {\n        // @ts-ignore\n        onQueryChange: (value)=>setQuery(value)\n        ,\n        onClear: ()=>setQuery(\"\")\n        ,\n        placeholder: `Search ${type}...`,\n        size: SearchBar.Sizes.SMALL,\n        query: query,\n        className: \"holy-settings-addons-search\"\n    }), /*#__PURE__*/ React.createElement(Tooltips.Tooltip, {\n        text: \"Open folder\",\n        position: \"bottom\"\n    }, (props)=>/*#__PURE__*/ React.createElement(Button, _extends({\n        }, props, {\n            size: Button.Sizes.NONE,\n            look: Button.Looks.BLANK,\n            className: \"holy-settings-open-folder\",\n            onClick: ()=>null\n        }), /*#__PURE__*/ React.createElement(_ui_components_discordicon__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n            name: \"Folder\"\n        }))\n    ), /*#__PURE__*/ React.createElement(Tooltips.Tooltip, {\n        text: \"Options\",\n        position: \"bottom\"\n    }, (props)=>/*#__PURE__*/ React.createElement(Button, _extends({\n        }, props, {\n            size: Button.Sizes.NONE,\n            look: Button.Looks.BLANK,\n            className: \"holy-settings-overflow-menu\",\n            onClick: (e)=>{\n                ContextMenu.open(e, ()=>/*#__PURE__*/ React.createElement(OverflowContextMenu, {\n                        type: type\n                    })\n                );\n            }\n        }), /*#__PURE__*/ React.createElement(_ui_components_discordicon__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n            name: \"OverflowMenu\"\n        }))\n    )), /*#__PURE__*/ React.createElement(\"div\", {\n        className: \"holy-settings-card-scroller\"\n    }, addons1?.length ? addons1.map((addon)=>/*#__PURE__*/ React.createElement(_card__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n            addon: addon,\n            // hasSettings={false}\n            manager: manager,\n            type: type,\n            key: addon.manifest.name,\n            openSettings: ()=>{\n            },\n            isEnabled: isEnabled,\n            toggle: toggle\n        })\n    ) : /*#__PURE__*/ React.createElement(\"div\", {\n        className: \"holy-settings-empty\"\n    }, /*#__PURE__*/ React.createElement(\"div\", {\n        className: PlaceholderClasses.emptyStateImage\n    }), /*#__PURE__*/ React.createElement(\"p\", null, LocaleManager.Messages.GIFT_CONFIRMATION_HEADER_FAIL), /*#__PURE__*/ React.createElement(\"p\", null, LocaleManager.Messages.SEARCH_NO_RESULTS)))));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/renderer/ui/addons/panel.tsx\n");

/***/ }),

/***/ "./src/renderer/ui/components/asynccomponent.tsx":
/*!*******************************************************!*\
  !*** ./src/renderer/ui/components/asynccomponent.tsx ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AsyncComponent),\n/* harmony export */   \"from\": () => (/* binding */ from),\n/* harmony export */   \"fromPromise\": () => (/* binding */ fromPromise)\n/* harmony export */ });\n/* harmony import */ var _modules_discord__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @modules/discord */ \"./src/renderer/modules/discord.ts\");\n\nfunction _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nfunction AsyncComponent({ _provider , _fallback , ...props }) {\n    const [Component, setComponent] = _modules_discord__WEBPACK_IMPORTED_MODULE_0__[\"default\"].React.useState(()=>_fallback ?? (()=>null\n        )\n    );\n    _modules_discord__WEBPACK_IMPORTED_MODULE_0__[\"default\"].React.useEffect(()=>{\n        _provider().then((comp)=>setComponent(()=>comp\n            )\n        );\n    }, [\n        _provider,\n        _fallback\n    ]);\n    return(/*#__PURE__*/ React.createElement(Component, _extends({\n    }, props)));\n};\nfunction from(promise, fallback, options) {\n    const value = {\n        resolved: false,\n        component: null\n    };\n    promise.then((component)=>{\n        Object.assign(value, {\n            component,\n            resolved: true\n        });\n    });\n    return Object.assign((props)=>{\n        if (value.resolved) return React.createElement(value.component, props);\n        return _modules_discord__WEBPACK_IMPORTED_MODULE_0__[\"default\"].React.createElement(AsyncComponent, {\n            _provider: ()=>promise\n            ,\n            _fallback: fallback,\n            ...props\n        });\n    }, options);\n}\nconst fromPromise = from; // Alias\nObject.assign(AsyncComponent, {\n    from\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvdWkvY29tcG9uZW50cy9hc3luY2NvbXBvbmVudC50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUE2Qzs7Ozs7Ozs7Ozs7Ozs7O0FBRTlCLFFBQVEsQ0FBQ0MsY0FBYyxDQUFDLENBQUNDLENBQUFBLFNBQVMsR0FBRUMsU0FBUyxNQUFLQyxLQUFLLEVBQUMsRUFBRSxDQUFDO0lBQ3RFLEtBQUssRUFBRUMsU0FBUyxFQUFFQyxZQUFZLElBQUlOLHVFQUE2QixLQUFRRyxTQUFTLFNBQVcsSUFBSTs7O0lBRS9GSCx3RUFBOEIsS0FBTyxDQUFDO1FBQ2xDRSxTQUFTLEdBQUdRLElBQUksRUFBQ0MsSUFBSSxHQUFJTCxZQUFZLEtBQU9LLElBQUk7OztJQUNwRCxDQUFDLEVBQUUsQ0FBQ1Q7UUFBQUEsU0FBUztRQUFFQyxTQUFTO0lBQUEsQ0FBQztJQUV6QixNQUFNLG1DQUNERSxTQUFTO09BQUtELEtBQUs7QUFFNUIsQ0FBQztBQUVNLFNBQVNRLElBQUksQ0FBQ0MsT0FBcUIsRUFBRUMsUUFBYyxFQUFFQyxPQUFhLEVBQUUsQ0FBQztJQUN4RSxLQUFLLENBQUNDLEtBQUssR0FBRyxDQUFDQztRQUFBQSxRQUFRLEVBQUUsS0FBSztRQUFFQyxTQUFTLEVBQUUsSUFBSTtJQUFBLENBQUM7SUFFaERMLE9BQU8sQ0FBQ0gsSUFBSSxFQUFFUSxTQUFTLEdBQUssQ0FBQztRQUN6QkMsTUFBTSxDQUFDQyxNQUFNLENBQUNKLEtBQUssRUFBRSxDQUFDRTtZQUFBQSxTQUFTO1lBQUVELFFBQVEsRUFBRSxJQUFJO1FBQUEsQ0FBQztJQUNwRCxDQUFDO0lBRUQsTUFBTSxDQUFDRSxNQUFNLENBQUNDLE1BQU0sRUFBQ2hCLEtBQUssR0FBSSxDQUFDO1FBQzNCLEVBQUUsRUFBRVksS0FBSyxDQUFDQyxRQUFRLEVBQUUsTUFBTSxDQUFDVixLQUFLLENBQUNjLGFBQWEsQ0FBQ0wsS0FBSyxDQUFDRSxTQUFTLEVBQUVkLEtBQUs7UUFFckUsTUFBTSxDQUFDSiw0RUFBa0MsQ0FBQ0MsY0FBYyxFQUFFLENBQUM7WUFDdkRDLFNBQVMsTUFBUVcsT0FBTzs7WUFDeEJWLFNBQVMsRUFBRVcsUUFBUTtlQUNoQlYsS0FBSztRQUNaLENBQUM7SUFDTCxDQUFDLEVBQUVXLE9BQU87QUFDZCxDQUFDO0FBQ00sS0FBSyxDQUFDTyxXQUFXLEdBQUdWLElBQUksQ0FBRSxDQUFRO0FBRXpDTyxNQUFNLENBQUNDLE1BQU0sQ0FBQ25CLGNBQWMsRUFBRSxDQUFDVztJQUFBQSxJQUFJO0FBQUEsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbHltb2QvLi9zcmMvcmVuZGVyZXIvdWkvY29tcG9uZW50cy9hc3luY2NvbXBvbmVudC50c3g/MTJjNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRGlzY29yZE1vZHVsZXMgZnJvbSBcIkBtb2R1bGVzL2Rpc2NvcmRcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEFzeW5jQ29tcG9uZW50KHtfcHJvdmlkZXIsIF9mYWxsYmFjaywgLi4ucHJvcHN9KSB7XHJcbiAgICBjb25zdCBbQ29tcG9uZW50LCBzZXRDb21wb25lbnRdID0gRGlzY29yZE1vZHVsZXMuUmVhY3QudXNlU3RhdGUoKCkgPT4gKF9mYWxsYmFjayA/PyAoKCkgPT4gbnVsbCkpKTtcclxuXHJcbiAgICBEaXNjb3JkTW9kdWxlcy5SZWFjdC51c2VFZmZlY3QoKCkgPT4ge1xyXG4gICAgICAgIF9wcm92aWRlcigpLnRoZW4oY29tcCA9PiBzZXRDb21wb25lbnQoKCkgPT4gY29tcCkpO1xyXG4gICAgfSwgW19wcm92aWRlciwgX2ZhbGxiYWNrXSk7XHJcbiAgICBcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPENvbXBvbmVudCB7Li4ucHJvcHN9IC8+XHJcbiAgICApO1xyXG59O1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGZyb20ocHJvbWlzZTogUHJvbWlzZTxhbnk+LCBmYWxsYmFjaz86IGFueSwgb3B0aW9ucz86IGFueSkge1xyXG4gICAgY29uc3QgdmFsdWUgPSB7cmVzb2x2ZWQ6IGZhbHNlLCBjb21wb25lbnQ6IG51bGx9O1xyXG5cclxuICAgIHByb21pc2UudGhlbigoY29tcG9uZW50KSA9PiB7XHJcbiAgICAgICAgT2JqZWN0LmFzc2lnbih2YWx1ZSwge2NvbXBvbmVudCwgcmVzb2x2ZWQ6IHRydWV9KTtcclxuICAgIH0pO1xyXG5cclxuICAgIHJldHVybiBPYmplY3QuYXNzaWduKHByb3BzID0+IHtcclxuICAgICAgICBpZiAodmFsdWUucmVzb2x2ZWQpIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KHZhbHVlLmNvbXBvbmVudCwgcHJvcHMpO1xyXG5cclxuICAgICAgICByZXR1cm4gRGlzY29yZE1vZHVsZXMuUmVhY3QuY3JlYXRlRWxlbWVudChBc3luY0NvbXBvbmVudCwge1xyXG4gICAgICAgICAgICBfcHJvdmlkZXI6ICgpID0+IHByb21pc2UsXHJcbiAgICAgICAgICAgIF9mYWxsYmFjazogZmFsbGJhY2ssXHJcbiAgICAgICAgICAgIC4uLnByb3BzXHJcbiAgICAgICAgfSk7XHJcbiAgICB9LCBvcHRpb25zKTtcclxufTtcclxuZXhwb3J0IGNvbnN0IGZyb21Qcm9taXNlID0gZnJvbTsgLy8gQWxpYXNcclxuXHJcbk9iamVjdC5hc3NpZ24oQXN5bmNDb21wb25lbnQsIHtmcm9tfSk7Il0sIm5hbWVzIjpbIkRpc2NvcmRNb2R1bGVzIiwiQXN5bmNDb21wb25lbnQiLCJfcHJvdmlkZXIiLCJfZmFsbGJhY2siLCJwcm9wcyIsIkNvbXBvbmVudCIsInNldENvbXBvbmVudCIsIlJlYWN0IiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ0aGVuIiwiY29tcCIsImZyb20iLCJwcm9taXNlIiwiZmFsbGJhY2siLCJvcHRpb25zIiwidmFsdWUiLCJyZXNvbHZlZCIsImNvbXBvbmVudCIsIk9iamVjdCIsImFzc2lnbiIsImNyZWF0ZUVsZW1lbnQiLCJmcm9tUHJvbWlzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/renderer/ui/components/asynccomponent.tsx\n");

/***/ }),

/***/ "./src/renderer/ui/components/discordicon.tsx":
/*!****************************************************!*\
  !*** ./src/renderer/ui/components/discordicon.tsx ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"cache\": () => (/* binding */ cache),\n/* harmony export */   \"default\": () => (/* binding */ DiscordIcon)\n/* harmony export */ });\n/* harmony import */ var _modules_webpack__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @modules/webpack */ \"./src/renderer/modules/webpack.ts\");\n\nfunction _extends() {\n    _extends = Object.assign || function(target) {\n        for(var i = 1; i < arguments.length; i++){\n            var source = arguments[i];\n            for(var key in source){\n                if (Object.prototype.hasOwnProperty.call(source, key)) {\n                    target[key] = source[key];\n                }\n            }\n        }\n        return target;\n    };\n    return _extends.apply(this, arguments);\n}\nconst cache = new Map();\nfunction DiscordIcon({ name , ...props }) {\n    const IconComponent = (cache.get(name) ?? (cache.set(name, _modules_webpack__WEBPACK_IMPORTED_MODULE_0__[\"default\"].findByDisplayName(name)), cache.get(name))) ?? (()=>null\n    );\n    return(/*#__PURE__*/ React.createElement(IconComponent, _extends({\n    }, props)));\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvdWkvY29tcG9uZW50cy9kaXNjb3JkaWNvbi50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNDOzs7Ozs7Ozs7Ozs7Ozs7QUFFL0IsS0FBSyxDQUFDQyxLQUFLLEdBQUcsR0FBRyxDQUFDQyxHQUFHO0FBRWIsUUFBUSxDQUFDQyxXQUFXLENBQUMsQ0FBQ0MsQ0FBQUEsSUFBSSxNQUFLQyxLQUFLLEVBQUMsRUFBRSxDQUFDO0lBQ25ELEtBQUssQ0FBQ0MsYUFBYSxJQUFHTCxLQUFLLENBQUNNLEdBQUcsQ0FBQ0gsSUFBSSxNQUM1QkgsS0FBSyxDQUFDTyxHQUFHLENBQUNKLElBQUksRUFBRUosMEVBQXlCLENBQUNJLElBQUksSUFBSUgsS0FBSyxDQUFDTSxHQUFHLENBQUNILElBQUksWUFDMUQsSUFBSTs7SUFFbEIsTUFBTSxtQ0FDREUsYUFBYTtPQUFLRCxLQUFLO0FBRWhDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob2x5bW9kLy4vc3JjL3JlbmRlcmVyL3VpL2NvbXBvbmVudHMvZGlzY29yZGljb24udHN4P2E2ZmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFdlYnBhY2sgZnJvbSBcIkBtb2R1bGVzL3dlYnBhY2tcIjtcclxuXHJcbmV4cG9ydCBjb25zdCBjYWNoZSA9IG5ldyBNYXAoKTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIERpc2NvcmRJY29uKHtuYW1lLCAuLi5wcm9wc30pIHtcclxuICAgIGNvbnN0IEljb25Db21wb25lbnQgPSBjYWNoZS5nZXQobmFtZSlcclxuICAgICAgICA/PyAoY2FjaGUuc2V0KG5hbWUsIFdlYnBhY2suZmluZEJ5RGlzcGxheU5hbWUobmFtZSkpLCBjYWNoZS5nZXQobmFtZSkpXHJcbiAgICAgICAgPz8gKCgpID0+IG51bGwpO1xyXG5cclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPEljb25Db21wb25lbnQgey4uLnByb3BzfSAvPlxyXG4gICAgKTtcclxufTsiXSwibmFtZXMiOlsiV2VicGFjayIsImNhY2hlIiwiTWFwIiwiRGlzY29yZEljb24iLCJuYW1lIiwicHJvcHMiLCJJY29uQ29tcG9uZW50IiwiZ2V0Iiwic2V0IiwiZmluZEJ5RGlzcGxheU5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/renderer/ui/components/discordicon.tsx\n");

/***/ }),

/***/ "./src/renderer/ui/components/errorboundary.tsx":
/*!******************************************************!*\
  !*** ./src/renderer/ui/components/errorboundary.tsx ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _modules_discord__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @modules/discord */ \"./src/renderer/modules/discord.ts\");\n/* harmony import */ var _asynccomponent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./asynccomponent */ \"./src/renderer/ui/components/asynccomponent.tsx\");\n\n\nconsole.log(\"abc\");\nconst ErrorBoundary = (0,_asynccomponent__WEBPACK_IMPORTED_MODULE_1__.fromPromise)(_modules_discord__WEBPACK_IMPORTED_MODULE_0__.promise.then(()=>{\n    console.log(\"Load..\");\n    return class ErrorBoundary extends _modules_discord__WEBPACK_IMPORTED_MODULE_0__[\"default\"].React.Component {\n        static getDerivedStateFromError(error) {\n            return {\n                hasError: true,\n                error: error.message\n            };\n        }\n        componentDidCatch(error, errorInfo) {\n            console.error(error, errorInfo);\n        }\n        render() {\n            if (this.state.hasError) {\n                return(/*#__PURE__*/ React.createElement(\"p\", null, \"Component Error: \", this.state.error));\n            }\n            return this.props.children;\n        }\n        constructor(...args){\n            super(...args);\n            this.state = {\n                hasError: false,\n                error: null\n            };\n        }\n    };\n}), void 0, {\n    displayName: \"Holy(ErrorBoundary)\"\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (ErrorBoundary);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvdWkvY29tcG9uZW50cy9lcnJvcmJvdW5kYXJ5LnRzeC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0Q7QUFDWjtBQUM1Q0csT0FBTyxDQUFDQyxHQUFHLENBQUMsQ0FBSztBQUVqQixLQUFLLENBQUNDLGFBQWEsR0FBR0gsNERBQVcsQ0FBQ0QsMERBQVksS0FBTyxDQUFDO0lBQ2xERSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxDQUFRO0lBQ3BCLE1BQU0sT0FBT0MsYUFBYSxTQUFTTCx3RUFBOEI7ZUFHdERTLHdCQUF3QixDQUFDQyxLQUFLLEVBQUUsQ0FBQztZQUNwQyxNQUFNLENBQUMsQ0FBQztnQkFDSkMsUUFBUSxFQUFFLElBQUk7Z0JBQ2RELEtBQUssRUFBRUEsS0FBSyxDQUFDRSxPQUFPO1lBQ3hCLENBQUM7UUFDTCxDQUFDO1FBRURDLGlCQUFpQixDQUFDSCxLQUFLLEVBQUVJLFNBQVMsRUFBRSxDQUFDO1lBQ2pDWCxPQUFPLENBQUNPLEtBQUssQ0FBQ0EsS0FBSyxFQUFFSSxTQUFTO1FBQ2xDLENBQUM7UUFFREMsTUFBTSxHQUFHLENBQUM7WUFDTixFQUFFLEVBQUUsSUFBSSxDQUFDQyxLQUFLLENBQUNMLFFBQVEsRUFBRSxDQUFDO2dCQUN0QixNQUFNLG1DQUNETSxDQUFDLFVBQUMsQ0FBaUIsb0JBQUMsSUFBSSxDQUFDRCxLQUFLLENBQUNOLEtBQUs7WUFFN0MsQ0FBQztZQUVELE1BQU0sQ0FBQyxJQUFJLENBQUNRLEtBQUssQ0FBQ0MsUUFBUTtRQUM5QixDQUFDOzs7WUF0QkUsSUF1Qk4sQ0F0QkdILEtBQUssR0FBRyxDQUFDTDtnQkFBQUEsUUFBUSxFQUFFLEtBQUs7Z0JBQUVELEtBQUssRUFBRSxJQUFJO1lBQUEsQ0FBQzs7O0FBdUI5QyxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsRUFBRSxDQUFDVTtJQUFBQSxXQUFXLEVBQUUsQ0FBcUI7QUFBQSxDQUFDO0FBRWhELGlFQUFlZixhQUFhLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ob2x5bW9kLy4vc3JjL3JlbmRlcmVyL3VpL2NvbXBvbmVudHMvZXJyb3Jib3VuZGFyeS50c3g/NGNlYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRGlzY29yZE1vZHVsZXMsIHtwcm9taXNlfSBmcm9tIFwiQG1vZHVsZXMvZGlzY29yZFwiO1xyXG5pbXBvcnQge2Zyb21Qcm9taXNlfSBmcm9tIFwiLi9hc3luY2NvbXBvbmVudFwiO1xyXG5jb25zb2xlLmxvZyhcImFiY1wiKTtcclxuXHJcbmNvbnN0IEVycm9yQm91bmRhcnkgPSBmcm9tUHJvbWlzZShwcm9taXNlLnRoZW4oKCkgPT4ge1xyXG4gICAgY29uc29sZS5sb2coXCJMb2FkLi5cIik7XHJcbiAgICByZXR1cm4gY2xhc3MgRXJyb3JCb3VuZGFyeSBleHRlbmRzIERpc2NvcmRNb2R1bGVzLlJlYWN0LkNvbXBvbmVudCB7XHJcbiAgICAgICAgc3RhdGUgPSB7aGFzRXJyb3I6IGZhbHNlLCBlcnJvcjogbnVsbH1cclxuXHJcbiAgICAgICAgc3RhdGljIGdldERlcml2ZWRTdGF0ZUZyb21FcnJvcihlcnJvcikge1xyXG4gICAgICAgICAgICByZXR1cm4ge1xyXG4gICAgICAgICAgICAgICAgaGFzRXJyb3I6IHRydWUsXHJcbiAgICAgICAgICAgICAgICBlcnJvcjogZXJyb3IubWVzc2FnZVxyXG4gICAgICAgICAgICB9O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29tcG9uZW50RGlkQ2F0Y2goZXJyb3IsIGVycm9ySW5mbykge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKGVycm9yLCBlcnJvckluZm8pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgcmVuZGVyKCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5zdGF0ZS5oYXNFcnJvcikge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIChcclxuICAgICAgICAgICAgICAgICAgICA8cD5Db21wb25lbnQgRXJyb3I6IHt0aGlzLnN0YXRlLmVycm9yfTwvcD5cclxuICAgICAgICAgICAgICAgICk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnByb3BzLmNoaWxkcmVuO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSksIHZvaWQgMCwge2Rpc3BsYXlOYW1lOiBcIkhvbHkoRXJyb3JCb3VuZGFyeSlcIn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgRXJyb3JCb3VuZGFyeTsiXSwibmFtZXMiOlsiRGlzY29yZE1vZHVsZXMiLCJwcm9taXNlIiwiZnJvbVByb21pc2UiLCJjb25zb2xlIiwibG9nIiwiRXJyb3JCb3VuZGFyeSIsInRoZW4iLCJSZWFjdCIsIkNvbXBvbmVudCIsImdldERlcml2ZWRTdGF0ZUZyb21FcnJvciIsImVycm9yIiwiaGFzRXJyb3IiLCJtZXNzYWdlIiwiY29tcG9uZW50RGlkQ2F0Y2giLCJlcnJvckluZm8iLCJyZW5kZXIiLCJzdGF0ZSIsInAiLCJwcm9wcyIsImNoaWxkcmVuIiwiZGlzcGxheU5hbWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/renderer/ui/components/errorboundary.tsx\n");

/***/ }),

/***/ "./src/renderer/ui/components/settings.tsx":
/*!*************************************************!*\
  !*** ./src/renderer/ui/components/settings.tsx ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"SettingsContext\": () => (/* binding */ SettingsContext),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _modules_discord__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @modules/discord */ \"./src/renderer/modules/discord.ts\");\n/* harmony import */ var _asynccomponent__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./asynccomponent */ \"./src/renderer/ui/components/asynccomponent.tsx\");\n/* harmony import */ var _errorboundary__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./errorboundary */ \"./src/renderer/ui/components/errorboundary.tsx\");\n/* harmony import */ var _settings_scss__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./settings.scss */ \"./src/renderer/ui/components/settings.scss\");\n\n\n\n\nlet SettingsContext = null;\n_modules_discord__WEBPACK_IMPORTED_MODULE_0__.promise.then(()=>{\n    SettingsContext = _modules_discord__WEBPACK_IMPORTED_MODULE_0__[\"default\"].React.createContext();\n});\nconst Settings = (0,_asynccomponent__WEBPACK_IMPORTED_MODULE_1__.fromPromise)(_modules_discord__WEBPACK_IMPORTED_MODULE_0__.promise.then(()=>{\n    return function HolySettings({ name , header , children  }) {\n        const { Caret  } = _modules_discord__WEBPACK_IMPORTED_MODULE_0__[\"default\"];\n        const [subPage, setSubPage] = _modules_discord__WEBPACK_IMPORTED_MODULE_0__[\"default\"].React.useState({\n            label: \"\",\n            render: null\n        });\n        const hasSubPage = _modules_discord__WEBPACK_IMPORTED_MODULE_0__[\"default\"].React.useMemo(()=>{\n            return typeof subPage.render === \"function\" && subPage.label;\n        }, [\n            subPage\n        ]);\n        const API = {\n            setPage (options) {\n                setSubPage(options);\n            },\n            reset () {\n                setSubPage({\n                    render: null,\n                    label: \"\"\n                });\n            }\n        };\n        return(/*#__PURE__*/ React.createElement(_errorboundary__WEBPACK_IMPORTED_MODULE_2__[\"default\"], null, /*#__PURE__*/ React.createElement(SettingsContext.Provider, {\n            value: API\n        }, /*#__PURE__*/ React.createElement(\"div\", {\n            className: \"holy-settings-panel\"\n        }, /*#__PURE__*/ React.createElement(\"div\", {\n            className: \"holy-settings-title\"\n        }, hasSubPage ? /*#__PURE__*/ React.createElement(\"div\", {\n            className: \"holy-settings-title-name\",\n            onClick: ()=>API.reset()\n        }, name) : name, hasSubPage ? /*#__PURE__*/ React.createElement(React.Fragment, null, /*#__PURE__*/ React.createElement(Caret, {\n            direction: Caret.Directions.RIGHT,\n            className: \"holy-settings-title-caret\"\n        }), /*#__PURE__*/ React.createElement(\"div\", {\n            className: \"holy-settings-title-sub\"\n        }, subPage.label)) : null, header), hasSubPage ? subPage.render() : children()))));\n    };\n}), void 0, {\n    displayName: \"Holy(Settings)\"\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Settings);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVuZGVyZXIvdWkvY29tcG9uZW50cy9zZXR0aW5ncy50c3guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQXdEO0FBQ1o7QUFDRDtBQUNuQjtBQUVqQixHQUFHLENBQUNJLGVBQWUsR0FBRyxJQUFJO0FBRWpDSCwwREFBWSxLQUFPLENBQUM7SUFDaEJHLGVBQWUsR0FBR0osNEVBQWtDO0FBQ3hELENBQUM7QUFFRCxLQUFLLENBQUNRLFFBQVEsR0FBR04sNERBQVcsQ0FBQ0QsMERBQVksS0FBTyxDQUFDO0lBQzdDLE1BQU0sQ0FBQyxRQUFRLENBQUNRLFlBQVksQ0FBQyxDQUFDQyxDQUFBQSxJQUFJLEdBQUVDLE1BQU0sR0FBRUMsUUFBUSxHQUFDLEVBQUUsQ0FBQztRQUNwRCxLQUFLLENBQUMsQ0FBQ0MsQ0FBQUEsS0FBSyxHQUFDLEdBQUdiLHdEQUFjO1FBQzlCLEtBQUssRUFBRWMsT0FBTyxFQUFFQyxVQUFVLElBQUlmLHVFQUE2QixDQUFDLENBQUNpQjtZQUFBQSxLQUFLLEVBQUUsQ0FBRTtZQUFFQyxNQUFNLEVBQUUsSUFBSTtRQUFBLENBQUM7UUFDckYsS0FBSyxDQUFDQyxVQUFVLEdBQUduQixzRUFBNEIsS0FBTyxDQUFDO1lBQ25ELE1BQU0sQ0FBQyxNQUFNLENBQUVjLE9BQU8sQ0FBQ0ksTUFBTSxLQUFNLENBQVUsYUFBSUosT0FBTyxDQUFDRyxLQUFLO1FBQ2xFLENBQUMsRUFBRSxDQUFDSDtZQUFBQSxPQUFPO1FBQUEsQ0FBQztRQUVaLEtBQUssQ0FBQ08sR0FBRyxHQUFHLENBQUM7WUFDVEMsT0FBTyxFQUFDQyxPQUEwRCxFQUFFLENBQUM7Z0JBQ2pFUixVQUFVLENBQUNRLE9BQU87WUFDdEIsQ0FBQztZQUNEQyxLQUFLLElBQUcsQ0FBQztnQkFDTFQsVUFBVSxDQUFDLENBQUNHO29CQUFBQSxNQUFNLEVBQUUsSUFBSTtvQkFBRUQsS0FBSyxFQUFFLENBQUU7Z0JBQUEsQ0FBQztZQUN4QyxDQUFDO1FBQ0wsQ0FBQztRQUVELE1BQU0sbUNBQ0RkLHNEQUFhLDBDQUNUQyxlQUFlLENBQUNxQixRQUFRO1lBQUNDLEtBQUssRUFBRUwsR0FBRzs2Q0FDL0JNLENBQUc7WUFBQ0MsU0FBUyxFQUFDLENBQXFCOzZDQUMvQkQsQ0FBRztZQUFDQyxTQUFTLEVBQUMsQ0FBcUI7V0FDL0JULFVBQVUscUNBQ05RLENBQUc7WUFBQ0MsU0FBUyxFQUFDLENBQTBCO1lBQUNDLE9BQU8sTUFBUVIsR0FBRyxDQUFDRyxLQUFLO1dBQzdEZCxJQUFJLElBRVRBLElBQUksRUFDUFMsVUFBVSxxQ0FDTmIsS0FBSyxDQUFDd0IsUUFBUSwwQ0FDVmpCLEtBQUs7WUFDRmtCLFNBQVMsRUFBRWxCLEtBQUssQ0FBQ21CLFVBQVUsQ0FBQ0MsS0FBSztZQUNqQ0wsU0FBUyxFQUFDLENBQTJCOzhDQUV4Q0QsQ0FBRztZQUFDQyxTQUFTLEVBQUMsQ0FBeUI7V0FBRWQsT0FBTyxDQUFDRyxLQUFLLEtBRTVELElBQUksRUFDTk4sTUFBTSxHQUVWUSxVQUFVLEdBQUdMLE9BQU8sQ0FBQ0ksTUFBTSxLQUFLTixRQUFRO0lBSzdELENBQUM7QUFDTCxDQUFDLEdBQUcsSUFBSSxDQUFDLENBQUMsRUFBRSxDQUFDc0I7SUFBQUEsV0FBVyxFQUFFLENBQWdCO0FBQUEsQ0FBQztBQUUzQyxpRUFBZTFCLFFBQVEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2hvbHltb2QvLi9zcmMvcmVuZGVyZXIvdWkvY29tcG9uZW50cy9zZXR0aW5ncy50c3g/NTZkMSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgRGlzY29yZE1vZHVsZXMsIHtwcm9taXNlfSBmcm9tIFwiQG1vZHVsZXMvZGlzY29yZFwiO1xyXG5pbXBvcnQge2Zyb21Qcm9taXNlfSBmcm9tIFwiLi9hc3luY2NvbXBvbmVudFwiO1xyXG5pbXBvcnQgRXJyb3JCb3VuZGFyeSBmcm9tIFwiLi9lcnJvcmJvdW5kYXJ5XCI7XHJcbmltcG9ydCBcIi4vc2V0dGluZ3Muc2Nzc1wiO1xyXG5cclxuZXhwb3J0IGxldCBTZXR0aW5nc0NvbnRleHQgPSBudWxsO1xyXG5cclxucHJvbWlzZS50aGVuKCgpID0+IHtcclxuICAgIFNldHRpbmdzQ29udGV4dCA9IERpc2NvcmRNb2R1bGVzLlJlYWN0LmNyZWF0ZUNvbnRleHQoKTtcclxufSk7XHJcblxyXG5jb25zdCBTZXR0aW5ncyA9IGZyb21Qcm9taXNlKHByb21pc2UudGhlbigoKSA9PiB7XHJcbiAgICByZXR1cm4gZnVuY3Rpb24gSG9seVNldHRpbmdzKHtuYW1lLCBoZWFkZXIsIGNoaWxkcmVufSkge1xyXG4gICAgICAgIGNvbnN0IHtDYXJldH0gPSBEaXNjb3JkTW9kdWxlcztcclxuICAgICAgICBjb25zdCBbc3ViUGFnZSwgc2V0U3ViUGFnZV0gPSBEaXNjb3JkTW9kdWxlcy5SZWFjdC51c2VTdGF0ZSh7bGFiZWw6IFwiXCIsIHJlbmRlcjogbnVsbH0pO1xyXG4gICAgICAgIGNvbnN0IGhhc1N1YlBhZ2UgPSBEaXNjb3JkTW9kdWxlcy5SZWFjdC51c2VNZW1vKCgpID0+IHtcclxuICAgICAgICAgICAgcmV0dXJuIHR5cGVvZiAoc3ViUGFnZS5yZW5kZXIpID09PSBcImZ1bmN0aW9uXCIgJiYgc3ViUGFnZS5sYWJlbDtcclxuICAgICAgICB9LCBbc3ViUGFnZV0pO1xyXG5cclxuICAgICAgICBjb25zdCBBUEkgPSB7XHJcbiAgICAgICAgICAgIHNldFBhZ2Uob3B0aW9uczoge2xhYmVsOiBzdHJpbmcsIHJlbmRlcjogKCkgPT4gUmVhY3QuUmVhY3RFbGVtZW50fSkge1xyXG4gICAgICAgICAgICAgICAgc2V0U3ViUGFnZShvcHRpb25zKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgcmVzZXQoKSB7XHJcbiAgICAgICAgICAgICAgICBzZXRTdWJQYWdlKHtyZW5kZXI6IG51bGwsIGxhYmVsOiBcIlwifSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9O1xyXG4gICAgICAgIFxyXG4gICAgICAgIHJldHVybiAoXHJcbiAgICAgICAgICAgIDxFcnJvckJvdW5kYXJ5PlxyXG4gICAgICAgICAgICAgICAgPFNldHRpbmdzQ29udGV4dC5Qcm92aWRlciB2YWx1ZT17QVBJfT5cclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhvbHktc2V0dGluZ3MtcGFuZWxcIj5cclxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJob2x5LXNldHRpbmdzLXRpdGxlXCI+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7aGFzU3ViUGFnZSA/IChcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImhvbHktc2V0dGluZ3MtdGl0bGUtbmFtZVwiIG9uQ2xpY2s9eygpID0+IEFQSS5yZXNldCgpfT5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge25hbWV9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApIDogbmFtZX1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtoYXNTdWJQYWdlID8gKFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxSZWFjdC5GcmFnbWVudD5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPENhcmV0XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3Rpb249e0NhcmV0LkRpcmVjdGlvbnMuUklHSFR9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzc05hbWU9XCJob2x5LXNldHRpbmdzLXRpdGxlLWNhcmV0XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLz5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJob2x5LXNldHRpbmdzLXRpdGxlLXN1YlwiPntzdWJQYWdlLmxhYmVsfTwvZGl2PlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvUmVhY3QuRnJhZ21lbnQ+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApOiBudWxsfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge2hlYWRlcn1cclxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtoYXNTdWJQYWdlID8gc3ViUGFnZS5yZW5kZXIoKSA6IGNoaWxkcmVuKCl9XHJcbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgICAgICA8L1NldHRpbmdzQ29udGV4dC5Qcm92aWRlcj5cclxuICAgICAgICAgICAgPC9FcnJvckJvdW5kYXJ5PlxyXG4gICAgICAgICk7XHJcbiAgICB9IFxyXG59KSwgdm9pZCAwLCB7ZGlzcGxheU5hbWU6IFwiSG9seShTZXR0aW5ncylcIn0pO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgU2V0dGluZ3M7Il0sIm5hbWVzIjpbIkRpc2NvcmRNb2R1bGVzIiwicHJvbWlzZSIsImZyb21Qcm9taXNlIiwiRXJyb3JCb3VuZGFyeSIsIlNldHRpbmdzQ29udGV4dCIsInRoZW4iLCJSZWFjdCIsImNyZWF0ZUNvbnRleHQiLCJTZXR0aW5ncyIsIkhvbHlTZXR0aW5ncyIsIm5hbWUiLCJoZWFkZXIiLCJjaGlsZHJlbiIsIkNhcmV0Iiwic3ViUGFnZSIsInNldFN1YlBhZ2UiLCJ1c2VTdGF0ZSIsImxhYmVsIiwicmVuZGVyIiwiaGFzU3ViUGFnZSIsInVzZU1lbW8iLCJBUEkiLCJzZXRQYWdlIiwib3B0aW9ucyIsInJlc2V0IiwiUHJvdmlkZXIiLCJ2YWx1ZSIsImRpdiIsImNsYXNzTmFtZSIsIm9uQ2xpY2siLCJGcmFnbWVudCIsImRpcmVjdGlvbiIsIkRpcmVjdGlvbnMiLCJSSUdIVCIsImRpc3BsYXlOYW1lIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/renderer/ui/components/settings.tsx\n");

/***/ })

/******/ });
/************************************************************************/
/******/ // The module cache
/******/ var __webpack_module_cache__ = {};
/******/ 
/******/ // The require function
/******/ function __webpack_require__(moduleId) {
/******/ 	// Check if module is in cache
/******/ 	var cachedModule = __webpack_module_cache__[moduleId];
/******/ 	if (cachedModule !== undefined) {
/******/ 		return cachedModule.exports;
/******/ 	}
/******/ 	// Create a new module (and put it into the cache)
/******/ 	var module = __webpack_module_cache__[moduleId] = {
/******/ 		// no module.id needed
/******/ 		// no module.loaded needed
/******/ 		exports: {}
/******/ 	};
/******/ 
/******/ 	// Execute the module function
/******/ 	__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 
/******/ 	// Return the exports of the module
/******/ 	return module.exports;
/******/ }
/******/ 
/************************************************************************/
/******/ /* webpack/runtime/compat get default export */
/******/ (() => {
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = (module) => {
/******/ 		var getter = module && module.__esModule ?
/******/ 			() => (module['default']) :
/******/ 			() => (module);
/******/ 		__webpack_require__.d(getter, { a: getter });
/******/ 		return getter;
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/define property getters */
/******/ (() => {
/******/ 	// define getter functions for harmony exports
/******/ 	__webpack_require__.d = (exports, definition) => {
/******/ 		for(var key in definition) {
/******/ 			if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 				Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 			}
/******/ 		}
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/hasOwnProperty shorthand */
/******/ (() => {
/******/ 	__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ })();
/******/ 
/******/ /* webpack/runtime/make namespace object */
/******/ (() => {
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = (exports) => {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/ })();
/******/ 
/************************************************************************/
/******/ 
/******/ // startup
/******/ // Load entry module and return exports
/******/ // This entry module can't be inlined because the eval-source-map devtool is used.
/******/ var __webpack_exports__ = __webpack_require__("./src/renderer/index.ts");
/******/ var __webpack_exports__default = __webpack_exports__["default"];
/******/ export { __webpack_exports__default as default };
/******/ 
